13-02-2020 21:34:27.874 [main] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.NESDeliveryApplication.logStartupProfileInfo(655) - The following profiles are active: dev
13-02-2020 21:34:28.865 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=2768e56a-3ce6-3c71-8f1d-96f9774746e5
13-02-2020 21:34:28.979 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13-02-2020 21:34:29.180 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8081 (http)
13-02-2020 21:34:29.188 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8081"]
13-02-2020 21:34:29.189 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
13-02-2020 21:34:29.189 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
13-02-2020 21:34:29.329 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
13-02-2020 21:34:29.329 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1439 ms
13-02-2020 21:34:29.490 [main] DEBUG Cheta314718101 - nes-delivery - com.nagarro.nes.store.DeliveryStore.init(24) - Storing some users before initialisation
13-02-2020 21:34:29.867 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
13-02-2020 21:34:29.887 [main] WARN  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
13-02-2020 21:34:29.887 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
13-02-2020 21:34:29.891 [main] WARN  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
13-02-2020 21:34:29.892 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
13-02-2020 21:34:29.992 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
13-02-2020 21:34:33.149 [main] WARN  Cheta314718101 - nes-delivery - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
13-02-2020 21:34:33.189 [main] WARN  Cheta314718101 - nes-delivery - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
13-02-2020 21:34:33.257 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
13-02-2020 21:34:33.317 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
13-02-2020 21:34:33.496 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
13-02-2020 21:34:33.497 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
13-02-2020 21:34:33.655 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
13-02-2020 21:34:33.656 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
13-02-2020 21:34:33.889 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 21:34:34.522 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
13-02-2020 21:34:34.523 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
13-02-2020 21:34:34.523 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
13-02-2020 21:34:34.523 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
13-02-2020 21:34:34.523 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
13-02-2020 21:34:34.523 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
13-02-2020 21:34:34.523 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
13-02-2020 21:34:34.683 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
13-02-2020 21:34:34.685 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
13-02-2020 21:34:34.688 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
13-02-2020 21:34:34.692 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581609874690 with initial instances count: 0
13-02-2020 21:34:34.694 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-DELIVERY with eureka with status UP
13-02-2020 21:34:34.694 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581609874694, current=UP, previous=STARTING]
13-02-2020 21:34:34.697 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
13-02-2020 21:34:34.700 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081: registering service...
13-02-2020 21:34:34.727 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
13-02-2020 21:34:34.768 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - registration status: 204
13-02-2020 21:34:34.771 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
13-02-2020 21:34:34.914 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect(524) - Attempting to connect to: [localhost:8087]
13-02-2020 21:34:34.972 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection(497) - Created new connection: rabbitConnectionFactory#49faf066:0/SimpleConnection@5d601832 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 56494]
13-02-2020 21:34:35.049 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8081"]
13-02-2020 21:34:35.076 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8081 (http) with context path ''
13-02-2020 21:34:35.077 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8081
13-02-2020 21:34:36.117 [main] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.NESDeliveryApplication.logStarted(61) - Started NESDeliveryApplication in 11.077 seconds (JVM running for 12.493)
13-02-2020 21:34:57.487 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
13-02-2020 21:34:57.487 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
13-02-2020 21:34:57.496 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 9 ms
13-02-2020 21:34:57.543 [http-nio-8081-exec-1] ERROR Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet].log(175) - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.amqp.support.converter.MessageConversionException: Failed to convert Message content] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.springframework.messaging.support.MessageBuilder and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1191)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:404)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:71)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:33)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
	at com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:4094)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3404)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.createMessage(AbstractJackson2MessageConverter.java:337)
	at org.springframework.amqp.support.converter.AbstractMessageConverter.toMessage(AbstractMessageConverter.java:70)
	at org.springframework.amqp.support.converter.AbstractMessageConverter.toMessage(AbstractMessageConverter.java:58)
	at org.springframework.amqp.rabbit.core.RabbitTemplate.convertMessageIfNecessary(RabbitTemplate.java:1758)
	at org.springframework.amqp.rabbit.core.RabbitTemplate.convertAndSend(RabbitTemplate.java:1075)
	at org.springframework.amqp.rabbit.core.RabbitTemplate.convertAndSend(RabbitTemplate.java:1068)
	at com.nagarro.nes.api.DeliveryController.getDeliveryDetailsByOrderID(DeliveryController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
13-02-2020 21:35:04.686 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
13-02-2020 21:35:04.687 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
13-02-2020 21:35:04.687 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
13-02-2020 21:35:04.687 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
13-02-2020 21:35:04.687 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
13-02-2020 21:35:04.687 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: false
13-02-2020 21:35:04.687 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
13-02-2020 21:35:04.722 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
13-02-2020 21:36:57.132 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
13-02-2020 21:36:57.134 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-DELIVERY with eureka with status DOWN
13-02-2020 21:36:57.134 [RMI TCP Connection(11)-127.0.0.1] WARN  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581610017134, current=DOWN, previous=UP]
13-02-2020 21:36:57.135 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081: registering service...
13-02-2020 21:36:57.139 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - registration status: 204
13-02-2020 21:36:57.143 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(640) - Waiting for workers to finish.
13-02-2020 21:36:57.211 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(643) - Successfully waited for workers to finish.
13-02-2020 21:36:57.215 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown(1231) - Shutdown ignored - container is not active already
13-02-2020 21:36:57.216 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
13-02-2020 21:36:57.228 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
13-02-2020 21:37:00.230 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
13-02-2020 21:37:00.238 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - deregister  status: 200
13-02-2020 21:37:00.246 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
13-02-2020 21:37:00.248 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8081"]
13-02-2020 21:37:01.153 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
13-02-2020 21:37:01.157 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
13-02-2020 21:37:01.165 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8081"]
13-02-2020 21:37:01.172 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8081"]
13-02-2020 21:37:14.557 [main] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.NESDeliveryApplication.logStartupProfileInfo(655) - The following profiles are active: dev
13-02-2020 21:37:15.618 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=2768e56a-3ce6-3c71-8f1d-96f9774746e5
13-02-2020 21:37:15.759 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13-02-2020 21:37:16.037 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8081 (http)
13-02-2020 21:37:16.046 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8081"]
13-02-2020 21:37:16.047 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
13-02-2020 21:37:16.048 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
13-02-2020 21:37:16.206 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
13-02-2020 21:37:16.207 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1633 ms
13-02-2020 21:37:16.367 [main] DEBUG Cheta314718101 - nes-delivery - com.nagarro.nes.store.DeliveryStore.init(24) - Storing some users before initialisation
13-02-2020 21:37:16.780 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
13-02-2020 21:37:16.804 [main] WARN  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
13-02-2020 21:37:16.804 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
13-02-2020 21:37:16.810 [main] WARN  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
13-02-2020 21:37:16.810 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
13-02-2020 21:37:16.920 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
13-02-2020 21:37:20.568 [main] WARN  Cheta314718101 - nes-delivery - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
13-02-2020 21:37:20.610 [main] WARN  Cheta314718101 - nes-delivery - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
13-02-2020 21:37:20.677 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
13-02-2020 21:37:20.719 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
13-02-2020 21:37:20.892 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
13-02-2020 21:37:20.893 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
13-02-2020 21:37:21.029 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
13-02-2020 21:37:21.030 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
13-02-2020 21:37:21.272 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 21:37:22.011 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
13-02-2020 21:37:22.011 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
13-02-2020 21:37:22.012 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
13-02-2020 21:37:22.012 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
13-02-2020 21:37:22.012 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
13-02-2020 21:37:22.012 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
13-02-2020 21:37:22.013 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
13-02-2020 21:37:22.226 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
13-02-2020 21:37:22.229 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
13-02-2020 21:37:22.231 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
13-02-2020 21:37:22.241 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581610042240 with initial instances count: 1
13-02-2020 21:37:22.242 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-DELIVERY with eureka with status UP
13-02-2020 21:37:22.243 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581610042243, current=UP, previous=STARTING]
13-02-2020 21:37:22.246 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081: registering service...
13-02-2020 21:37:22.246 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
13-02-2020 21:37:22.272 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
13-02-2020 21:37:22.285 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - registration status: 204
13-02-2020 21:37:22.316 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
13-02-2020 21:37:22.470 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect(524) - Attempting to connect to: [localhost:8087]
13-02-2020 21:37:22.519 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection(497) - Created new connection: rabbitConnectionFactory#58472096:0/SimpleConnection@7f1f60a0 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 56626]
13-02-2020 21:37:22.599 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8081"]
13-02-2020 21:37:22.623 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8081 (http) with context path ''
13-02-2020 21:37:22.625 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8081
13-02-2020 21:37:23.737 [main] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.NESDeliveryApplication.logStarted(61) - Started NESDeliveryApplication in 14.026 seconds (JVM running for 16.924)
13-02-2020 21:37:27.241 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
13-02-2020 21:37:27.242 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
13-02-2020 21:37:27.250 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 8 ms
13-02-2020 21:37:27.308 [http-nio-8081-exec-1] ERROR Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet].log(175) - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.amqp.support.converter.MessageConversionException: Failed to convert Message content] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.springframework.messaging.support.MessageBuilder and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1191)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:404)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:71)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:33)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
	at com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:4094)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3404)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.createMessage(AbstractJackson2MessageConverter.java:337)
	at org.springframework.amqp.support.converter.AbstractMessageConverter.toMessage(AbstractMessageConverter.java:70)
	at org.springframework.amqp.support.converter.AbstractMessageConverter.toMessage(AbstractMessageConverter.java:58)
	at org.springframework.amqp.rabbit.core.RabbitTemplate.convertMessageIfNecessary(RabbitTemplate.java:1758)
	at org.springframework.amqp.rabbit.core.RabbitTemplate.convertAndSend(RabbitTemplate.java:1075)
	at org.springframework.amqp.rabbit.core.RabbitTemplate.convertAndSend(RabbitTemplate.java:1068)
	at com.nagarro.nes.api.DeliveryController.getDeliveryDetailsByOrderID(DeliveryController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
13-02-2020 21:38:51.943 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
13-02-2020 21:38:51.944 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-DELIVERY with eureka with status DOWN
13-02-2020 21:38:51.944 [RMI TCP Connection(10)-127.0.0.1] WARN  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581610131944, current=DOWN, previous=UP]
13-02-2020 21:38:51.944 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081: registering service...
13-02-2020 21:38:51.951 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(640) - Waiting for workers to finish.
13-02-2020 21:38:51.953 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - registration status: 204
13-02-2020 21:38:52.694 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(643) - Successfully waited for workers to finish.
13-02-2020 21:38:52.699 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown(1231) - Shutdown ignored - container is not active already
13-02-2020 21:38:52.700 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
13-02-2020 21:38:52.712 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
13-02-2020 21:38:55.714 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
13-02-2020 21:38:55.720 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - deregister  status: 200
13-02-2020 21:38:55.728 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
13-02-2020 21:38:55.729 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8081"]
13-02-2020 21:38:56.323 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
13-02-2020 21:38:56.326 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
13-02-2020 21:38:56.332 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8081"]
13-02-2020 21:38:56.336 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8081"]
13-02-2020 21:39:05.676 [main] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.NESDeliveryApplication.logStartupProfileInfo(655) - The following profiles are active: dev
13-02-2020 21:39:06.585 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=2768e56a-3ce6-3c71-8f1d-96f9774746e5
13-02-2020 21:39:06.698 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13-02-2020 21:39:06.885 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8081 (http)
13-02-2020 21:39:06.893 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8081"]
13-02-2020 21:39:06.893 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
13-02-2020 21:39:06.894 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
13-02-2020 21:39:07.030 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
13-02-2020 21:39:07.032 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1341 ms
13-02-2020 21:39:07.195 [main] DEBUG Cheta314718101 - nes-delivery - com.nagarro.nes.store.DeliveryStore.init(24) - Storing some users before initialisation
13-02-2020 21:39:07.576 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
13-02-2020 21:39:07.604 [main] WARN  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
13-02-2020 21:39:07.605 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
13-02-2020 21:39:07.616 [main] WARN  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
13-02-2020 21:39:07.616 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
13-02-2020 21:39:07.762 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
13-02-2020 21:39:11.251 [main] WARN  Cheta314718101 - nes-delivery - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
13-02-2020 21:39:11.287 [main] WARN  Cheta314718101 - nes-delivery - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
13-02-2020 21:39:11.342 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
13-02-2020 21:39:11.388 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
13-02-2020 21:39:11.546 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
13-02-2020 21:39:11.547 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
13-02-2020 21:39:11.696 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
13-02-2020 21:39:11.697 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
13-02-2020 21:39:11.893 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 21:39:12.528 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
13-02-2020 21:39:12.530 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
13-02-2020 21:39:12.530 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
13-02-2020 21:39:12.530 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
13-02-2020 21:39:12.530 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
13-02-2020 21:39:12.530 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
13-02-2020 21:39:12.530 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
13-02-2020 21:39:12.744 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
13-02-2020 21:39:12.747 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
13-02-2020 21:39:12.750 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
13-02-2020 21:39:12.754 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581610152753 with initial instances count: 1
13-02-2020 21:39:12.756 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-DELIVERY with eureka with status UP
13-02-2020 21:39:12.757 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581610152757, current=UP, previous=STARTING]
13-02-2020 21:39:12.759 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081: registering service...
13-02-2020 21:39:12.759 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
13-02-2020 21:39:12.780 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
13-02-2020 21:39:12.797 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - registration status: 204
13-02-2020 21:39:12.816 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
13-02-2020 21:39:12.919 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect(524) - Attempting to connect to: [localhost:8087]
13-02-2020 21:39:12.955 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection(497) - Created new connection: rabbitConnectionFactory#dc4a691:0/SimpleConnection@2bb717d7 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 56770]
13-02-2020 21:39:13.031 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8081"]
13-02-2020 21:39:13.055 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8081 (http) with context path ''
13-02-2020 21:39:13.056 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8081
13-02-2020 21:39:14.004 [main] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.NESDeliveryApplication.logStarted(61) - Started NESDeliveryApplication in 11.139 seconds (JVM running for 12.568)
13-02-2020 21:39:22.079 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
13-02-2020 21:39:22.079 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
13-02-2020 21:39:22.088 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 8 ms
13-02-2020 21:39:22.148 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.api.DeliveryController.getDeliveryDetailsByOrderID(41) - Recieved get Delivery request by order
13-02-2020 21:39:22.149 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.services.impl.DeliveryServiceImpl.getDeliveryDetailsByOrderID(62) - Getting delivery with order:s
13-02-2020 21:39:22.153 [http-nio-8081-exec-1] ERROR Cheta314718101 - nes-delivery - com.nagarro.nes.exceptions.advices.ExceptionController.handleException(144) - Exception with error code :notfound.delivery
13-02-2020 21:39:22.162 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler.log(129) - Execution of Rabbit message listener failed.
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener threw exception
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.wrapToListenerExecutionFailedExceptionIfNeeded(AbstractMessageListenerContainer.java:1693)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1583)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1498)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1486)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1477)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1421)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:958)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:908)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:81)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1279)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1185)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.amqp.support.converter.MessageConversionException: Failed to convert Message content
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.doFromMessage(AbstractJackson2MessageConverter.java:303)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.fromMessage(AbstractJackson2MessageConverter.java:259)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.fromMessage(AbstractJackson2MessageConverter.java:239)
	at org.springframework.amqp.rabbit.listener.adapter.AbstractAdaptableMessageListener.extractMessage(AbstractAdaptableMessageListener.java:289)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter$MessagingMessageConverterAdapter.extractPayload(MessagingMessageListenerAdapter.java:322)
	at org.springframework.amqp.support.converter.MessagingMessageConverter.fromMessage(MessagingMessageConverter.java:122)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.toMessagingMessage(MessagingMessageListenerAdapter.java:204)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:131)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1579)
	... 10 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.String` out of START_OBJECT token
 at [Source: (String)"{"payload":"{\"Hello\"}","headers":{"id":"f9f119a8-cfb3-47cd-3c56-a8180e0aec44","timestamp":1581610162129}}"; line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1442)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1216)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1126)
	at com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:63)
	at com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:10)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.convertBytesToObject(AbstractJackson2MessageConverter.java:311)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.doFromMessage(AbstractJackson2MessageConverter.java:292)
	... 18 common frames omitted
13-02-2020 21:39:22.164 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler$DefaultExceptionStrategy.isFatal(171) - Fatal message conversion error; message rejected; it will be dropped or routed to a dead letter exchange, if so configured: (Body:'{"payload":"{\"Hello\"}","headers":{"id":"f9f119a8-cfb3-47cd-3c56-a8180e0aec44","timestamp":1581610162129}}' MessageProperties [headers={__TypeId__=org.springframework.messaging.support.GenericMessage}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=test_exchange, receivedRoutingKey=test_routing_key, deliveryTag=1, consumerTag=amq.ctag-h_8fosmkMCr0UxqnpJ1YIg, consumerQueue=test_queue])
13-02-2020 21:39:22.164 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] ERROR Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.invokeErrorHandler(1386) - Execution of Rabbit message listener failed, and the error handler threw an exception
org.springframework.amqp.AmqpRejectAndDontRequeueException: Error Handler converted exception to fatal
	at org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler.handleError(ConditionalRejectingErrorHandler.java:116)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:1383)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.handleListenerException(AbstractMessageListenerContainer.java:1667)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1442)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:958)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:908)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:81)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1279)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1185)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener threw exception
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.wrapToListenerExecutionFailedExceptionIfNeeded(AbstractMessageListenerContainer.java:1693)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1583)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1498)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1486)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1477)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1421)
	... 6 common frames omitted
Caused by: org.springframework.amqp.support.converter.MessageConversionException: Failed to convert Message content
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.doFromMessage(AbstractJackson2MessageConverter.java:303)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.fromMessage(AbstractJackson2MessageConverter.java:259)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.fromMessage(AbstractJackson2MessageConverter.java:239)
	at org.springframework.amqp.rabbit.listener.adapter.AbstractAdaptableMessageListener.extractMessage(AbstractAdaptableMessageListener.java:289)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter$MessagingMessageConverterAdapter.extractPayload(MessagingMessageListenerAdapter.java:322)
	at org.springframework.amqp.support.converter.MessagingMessageConverter.fromMessage(MessagingMessageConverter.java:122)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.toMessagingMessage(MessagingMessageListenerAdapter.java:204)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:131)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1579)
	... 10 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.String` out of START_OBJECT token
 at [Source: (String)"{"payload":"{\"Hello\"}","headers":{"id":"f9f119a8-cfb3-47cd-3c56-a8180e0aec44","timestamp":1581610162129}}"; line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1442)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1216)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1126)
	at com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:63)
	at com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:10)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.convertBytesToObject(AbstractJackson2MessageConverter.java:311)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.doFromMessage(AbstractJackson2MessageConverter.java:292)
	... 18 common frames omitted
13-02-2020 21:44:12.538 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 21:49:12.558 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 21:53:38.073 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
13-02-2020 21:53:38.075 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-DELIVERY with eureka with status DOWN
13-02-2020 21:53:38.075 [RMI TCP Connection(24)-127.0.0.1] WARN  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581611018075, current=DOWN, previous=UP]
13-02-2020 21:53:38.076 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081: registering service...
13-02-2020 21:53:38.085 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - registration status: 204
13-02-2020 21:53:38.085 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(640) - Waiting for workers to finish.
13-02-2020 21:53:38.402 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(643) - Successfully waited for workers to finish.
13-02-2020 21:53:38.407 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown(1231) - Shutdown ignored - container is not active already
13-02-2020 21:53:38.408 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
13-02-2020 21:53:38.422 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
13-02-2020 21:53:41.424 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
13-02-2020 21:53:41.430 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - deregister  status: 200
13-02-2020 21:53:41.439 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
13-02-2020 21:53:41.440 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8081"]
13-02-2020 21:53:42.202 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
13-02-2020 21:53:42.208 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
13-02-2020 21:53:42.218 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8081"]
13-02-2020 21:53:42.224 [RMI TCP Connection(24)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8081"]
13-02-2020 21:53:53.871 [main] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.NESDeliveryApplication.logStartupProfileInfo(655) - The following profiles are active: dev
13-02-2020 21:53:54.981 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=2768e56a-3ce6-3c71-8f1d-96f9774746e5
13-02-2020 21:53:55.008 [main] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.NESDeliveryApplication.logStartupProfileInfo(655) - The following profiles are active: dev
13-02-2020 21:53:55.137 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13-02-2020 21:53:55.382 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8081 (http)
13-02-2020 21:53:55.397 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8081"]
13-02-2020 21:53:55.400 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
13-02-2020 21:53:55.400 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
13-02-2020 21:53:55.616 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
13-02-2020 21:53:55.617 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1725 ms
13-02-2020 21:53:55.844 [main] DEBUG Cheta314718101 - nes-delivery - com.nagarro.nes.store.DeliveryStore.init(24) - Storing some users before initialisation
13-02-2020 21:53:56.329 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
13-02-2020 21:53:56.354 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=2768e56a-3ce6-3c71-8f1d-96f9774746e5
13-02-2020 21:53:56.360 [main] WARN  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
13-02-2020 21:53:56.360 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
13-02-2020 21:53:56.367 [main] WARN  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
13-02-2020 21:53:56.368 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
13-02-2020 21:53:56.496 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13-02-2020 21:53:56.510 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
13-02-2020 21:53:56.820 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8081 (http)
13-02-2020 21:53:56.830 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8081"]
13-02-2020 21:53:56.831 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
13-02-2020 21:53:56.831 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
13-02-2020 21:53:57.051 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
13-02-2020 21:53:57.052 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 2026 ms
13-02-2020 21:53:57.243 [main] DEBUG Cheta314718101 - nes-delivery - com.nagarro.nes.store.DeliveryStore.init(24) - Storing some users before initialisation
13-02-2020 21:53:57.707 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
13-02-2020 21:53:57.733 [main] WARN  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
13-02-2020 21:53:57.734 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
13-02-2020 21:53:57.739 [main] WARN  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
13-02-2020 21:53:57.739 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
13-02-2020 21:53:57.875 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
13-02-2020 21:54:01.746 [main] WARN  Cheta314718101 - nes-delivery - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
13-02-2020 21:54:01.806 [main] WARN  Cheta314718101 - nes-delivery - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
13-02-2020 21:54:01.882 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
13-02-2020 21:54:01.924 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
13-02-2020 21:54:02.198 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
13-02-2020 21:54:02.199 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
13-02-2020 21:54:02.374 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
13-02-2020 21:54:02.376 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
13-02-2020 21:54:02.671 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 21:54:03.606 [main] WARN  Cheta314718101 - nes-delivery - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
13-02-2020 21:54:03.664 [main] WARN  Cheta314718101 - nes-delivery - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
13-02-2020 21:54:03.742 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
13-02-2020 21:54:03.841 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
13-02-2020 21:54:04.034 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
13-02-2020 21:54:04.034 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
13-02-2020 21:54:04.229 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
13-02-2020 21:54:04.229 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
13-02-2020 21:54:04.478 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 21:54:04.528 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
13-02-2020 21:54:04.528 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
13-02-2020 21:54:04.529 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
13-02-2020 21:54:04.529 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
13-02-2020 21:54:04.529 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
13-02-2020 21:54:04.529 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
13-02-2020 21:54:04.530 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
13-02-2020 21:54:04.676 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
13-02-2020 21:54:04.678 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
13-02-2020 21:54:04.680 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
13-02-2020 21:54:04.685 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581611044683 with initial instances count: 0
13-02-2020 21:54:04.686 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-DELIVERY with eureka with status UP
13-02-2020 21:54:04.687 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581611044687, current=UP, previous=STARTING]
13-02-2020 21:54:04.690 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081: registering service...
13-02-2020 21:54:04.690 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
13-02-2020 21:54:04.714 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
13-02-2020 21:54:04.758 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - registration status: 204
13-02-2020 21:54:04.775 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
13-02-2020 21:54:04.976 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect(524) - Attempting to connect to: [localhost:8087]
13-02-2020 21:54:05.028 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection(497) - Created new connection: rabbitConnectionFactory#5e5af8e1:0/SimpleConnection@49653791 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 57680]
13-02-2020 21:54:05.113 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8081"]
13-02-2020 21:54:05.146 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8081 (http) with context path ''
13-02-2020 21:54:05.148 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8081
13-02-2020 21:54:05.966 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
13-02-2020 21:54:05.968 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
13-02-2020 21:54:05.968 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
13-02-2020 21:54:05.968 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
13-02-2020 21:54:05.968 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
13-02-2020 21:54:05.968 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
13-02-2020 21:54:05.968 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
13-02-2020 21:54:06.143 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
13-02-2020 21:54:06.146 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
13-02-2020 21:54:06.148 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
13-02-2020 21:54:06.152 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581611046151 with initial instances count: 0
13-02-2020 21:54:06.154 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-DELIVERY with eureka with status UP
13-02-2020 21:54:06.156 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581611046155, current=UP, previous=STARTING]
13-02-2020 21:54:06.158 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
13-02-2020 21:54:06.161 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081: registering service...
13-02-2020 21:54:06.183 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
13-02-2020 21:54:06.225 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
13-02-2020 21:54:06.231 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - registration status: 204
13-02-2020 21:54:06.468 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect(524) - Attempting to connect to: [localhost:8087]
13-02-2020 21:54:06.532 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection(497) - Created new connection: rabbitConnectionFactory#b52b755:0/SimpleConnection@58601e7a [delegate=amqp://guest@127.0.0.1:8087/, localPort= 57686]
13-02-2020 21:54:06.614 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8081"]
13-02-2020 21:54:06.628 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8081"]
13-02-2020 21:54:06.628 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
13-02-2020 21:54:06.634 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8081"]
13-02-2020 21:54:06.634 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8081"]
13-02-2020 21:54:06.636 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
13-02-2020 21:54:06.638 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-DELIVERY with eureka with status DOWN
13-02-2020 21:54:06.638 [main] WARN  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581611046638, current=DOWN, previous=UP]
13-02-2020 21:54:06.638 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081: registering service...
13-02-2020 21:54:06.646 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - registration status: 204
13-02-2020 21:54:06.649 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(640) - Waiting for workers to finish.
13-02-2020 21:54:06.984 [main] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.NESDeliveryApplication.logStarted(61) - Started NESDeliveryApplication in 17.046 seconds (JVM running for 19.538)
13-02-2020 21:54:07.616 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(643) - Successfully waited for workers to finish.
13-02-2020 21:54:07.624 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown(1231) - Shutdown ignored - container is not active already
13-02-2020 21:54:07.625 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
13-02-2020 21:54:07.637 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
13-02-2020 21:54:10.639 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
13-02-2020 21:54:10.645 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - deregister  status: 200
13-02-2020 21:54:10.653 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
13-02-2020 21:54:10.659 [main] ERROR Cheta314718101 - nes-delivery - org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8081 was already in use.

Action:

Identify and stop the process that's listening on port 8081 or configure this application to listen on another port.

13-02-2020 21:54:19.829 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
13-02-2020 21:54:19.830 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
13-02-2020 21:54:19.838 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 7 ms
13-02-2020 21:54:19.876 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.api.DeliveryController.getDeliveryDetailsByOrderID(46) - Recieved get Delivery request by order
13-02-2020 21:54:19.876 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.services.impl.DeliveryServiceImpl.getDeliveryDetailsByOrderID(62) - Getting delivery with order:s
13-02-2020 21:54:19.880 [http-nio-8081-exec-1] ERROR Cheta314718101 - nes-delivery - com.nagarro.nes.exceptions.advices.ExceptionController.handleException(144) - Exception with error code :notfound.delivery
13-02-2020 21:54:34.678 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
13-02-2020 21:54:34.678 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
13-02-2020 21:54:34.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
13-02-2020 21:54:34.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
13-02-2020 21:54:34.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
13-02-2020 21:54:34.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: false
13-02-2020 21:54:34.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
13-02-2020 21:54:34.682 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
13-02-2020 21:54:34.686 [DiscoveryClient-HeartbeatExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.renew(868) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - Re-registering apps/NES-DELIVERY
13-02-2020 21:54:34.686 [DiscoveryClient-HeartbeatExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081: registering service...
13-02-2020 21:54:34.696 [DiscoveryClient-HeartbeatExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - registration status: 204
13-02-2020 21:55:01.655 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
13-02-2020 21:55:01.656 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-DELIVERY with eureka with status DOWN
13-02-2020 21:55:01.656 [RMI TCP Connection(8)-127.0.0.1] WARN  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581611101656, current=DOWN, previous=UP]
13-02-2020 21:55:01.657 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081: registering service...
13-02-2020 21:55:01.666 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(640) - Waiting for workers to finish.
13-02-2020 21:55:01.667 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - registration status: 204
13-02-2020 21:55:01.995 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(643) - Successfully waited for workers to finish.
13-02-2020 21:55:02.000 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown(1231) - Shutdown ignored - container is not active already
13-02-2020 21:55:02.001 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
13-02-2020 21:55:02.016 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
13-02-2020 21:55:04.685 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
13-02-2020 21:55:04.685 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
13-02-2020 21:55:04.686 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
13-02-2020 21:55:04.686 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
13-02-2020 21:55:04.686 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
13-02-2020 21:55:04.686 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: false
13-02-2020 21:55:04.686 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
13-02-2020 21:55:04.717 [DiscoveryClient-CacheRefreshExecutor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
13-02-2020 21:55:05.017 [DiscoveryClient-0] WARN  Cheta314718101 - nes-delivery - com.netflix.discovery.TimedSupervisorTask.run(88) - task supervisor shutting down, can't accept the task
13-02-2020 21:55:05.018 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
13-02-2020 21:55:05.023 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - deregister  status: 200
13-02-2020 21:55:05.032 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
13-02-2020 21:55:05.034 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8081"]
13-02-2020 21:55:05.834 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
13-02-2020 21:55:05.837 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
13-02-2020 21:55:05.843 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8081"]
13-02-2020 21:55:05.847 [RMI TCP Connection(8)-127.0.0.1] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8081"]
13-02-2020 21:55:18.427 [main] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.NESDeliveryApplication.logStartupProfileInfo(655) - The following profiles are active: dev
13-02-2020 21:55:19.553 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=2768e56a-3ce6-3c71-8f1d-96f9774746e5
13-02-2020 21:55:19.708 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13-02-2020 21:55:19.956 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8081 (http)
13-02-2020 21:55:19.965 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8081"]
13-02-2020 21:55:19.966 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
13-02-2020 21:55:19.966 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
13-02-2020 21:55:20.144 [main] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
13-02-2020 21:55:20.145 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1700 ms
13-02-2020 21:55:20.331 [main] DEBUG Cheta314718101 - nes-delivery - com.nagarro.nes.store.DeliveryStore.init(24) - Storing some users before initialisation
13-02-2020 21:55:20.841 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
13-02-2020 21:55:20.868 [main] WARN  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
13-02-2020 21:55:20.869 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
13-02-2020 21:55:20.874 [main] WARN  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
13-02-2020 21:55:20.874 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
13-02-2020 21:55:21.007 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
13-02-2020 21:55:24.606 [main] WARN  Cheta314718101 - nes-delivery - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
13-02-2020 21:55:24.652 [main] WARN  Cheta314718101 - nes-delivery - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
13-02-2020 21:55:24.723 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
13-02-2020 21:55:24.765 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
13-02-2020 21:55:24.950 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
13-02-2020 21:55:24.950 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
13-02-2020 21:55:25.101 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
13-02-2020 21:55:25.101 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
13-02-2020 21:55:25.309 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 21:55:26.194 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
13-02-2020 21:55:26.196 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
13-02-2020 21:55:26.196 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
13-02-2020 21:55:26.196 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
13-02-2020 21:55:26.198 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
13-02-2020 21:55:26.198 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
13-02-2020 21:55:26.198 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
13-02-2020 21:55:26.422 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
13-02-2020 21:55:26.428 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
13-02-2020 21:55:26.431 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
13-02-2020 21:55:26.438 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581611126436 with initial instances count: 1
13-02-2020 21:55:26.439 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-DELIVERY with eureka with status UP
13-02-2020 21:55:26.441 [main] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581611126441, current=UP, previous=STARTING]
13-02-2020 21:55:26.443 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081: registering service...
13-02-2020 21:55:26.443 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
13-02-2020 21:55:26.466 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
13-02-2020 21:55:26.484 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-DELIVERY/Cheta314718101.Nagarro.local:nes-delivery:8081 - registration status: 204
13-02-2020 21:55:26.508 [main] INFO  Cheta314718101 - nes-delivery - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
13-02-2020 21:55:26.637 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect(524) - Attempting to connect to: [localhost:8087]
13-02-2020 21:55:26.685 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection(497) - Created new connection: rabbitConnectionFactory#62dbe64e:0/SimpleConnection@4c063cb9 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 57760]
13-02-2020 21:55:26.761 [main] INFO  Cheta314718101 - nes-delivery - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8081"]
13-02-2020 21:55:26.785 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8081 (http) with context path ''
13-02-2020 21:55:26.787 [main] INFO  Cheta314718101 - nes-delivery - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8081
13-02-2020 21:55:28.062 [main] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.NESDeliveryApplication.logStarted(61) - Started NESDeliveryApplication in 13.165 seconds (JVM running for 14.938)
13-02-2020 21:55:30.612 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
13-02-2020 21:55:30.612 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
13-02-2020 21:55:30.620 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 7 ms
13-02-2020 21:55:30.665 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.api.DeliveryController.getDeliveryDetailsByOrderID(46) - Recieved get Delivery request by order
13-02-2020 21:55:30.665 [http-nio-8081-exec-1] INFO  Cheta314718101 - nes-delivery - com.nagarro.nes.services.impl.DeliveryServiceImpl.getDeliveryDetailsByOrderID(62) - Getting delivery with order:s
13-02-2020 21:55:30.669 [http-nio-8081-exec-1] ERROR Cheta314718101 - nes-delivery - com.nagarro.nes.exceptions.advices.ExceptionController.handleException(144) - Exception with error code :notfound.delivery
13-02-2020 22:00:26.203 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 22:05:26.209 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 23:50:09.457 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 23:55:09.458 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-delivery - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
