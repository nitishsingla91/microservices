13-02-2020 00:00:36.873 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 00:05:36.888 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 00:10:36.890 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 00:15:36.891 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 00:20:36.891 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 00:25:36.892 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
13-02-2020 00:29:11.396 [RMI TCP Connection(77)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
13-02-2020 00:29:11.406 [RMI TCP Connection(77)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
13-02-2020 00:29:11.407 [RMI TCP Connection(77)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581533951407, current=DOWN, previous=UP]
13-02-2020 00:29:11.409 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
13-02-2020 00:29:11.428 [RMI TCP Connection(77)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
13-02-2020 00:29:11.438 [RMI TCP Connection(77)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
13-02-2020 00:29:11.742 [DiscoveryClient-CacheRefreshExecutor-0] ERROR Cheta314718101 - nes-product - com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(91) - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1103)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:985)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
13-02-2020 00:29:11.742 [DiscoveryClient-HeartbeatExecutor-0] ERROR Cheta314718101 - nes-product - com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(91) - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 common frames omitted
13-02-2020 00:29:11.743 [DiscoveryClient-HeartbeatExecutor-0] WARN  Cheta314718101 - nes-product - com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(130) - Request execution failed with message: java.net.ConnectException: Connection refused: connect
13-02-2020 00:29:11.744 [DiscoveryClient-CacheRefreshExecutor-0] WARN  Cheta314718101 - nes-product - com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(130) - Request execution failed with message: java.net.ConnectException: Connection refused: connect
13-02-2020 00:29:14.446 [DiscoveryClient-1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.TimedSupervisorTask.run(88) - task supervisor shutting down, can't accept the task
13-02-2020 00:29:14.451 [DiscoveryClient-0] WARN  Cheta314718101 - nes-product - com.netflix.discovery.TimedSupervisorTask.run(88) - task supervisor shutting down, can't accept the task
13-02-2020 00:29:14.451 [RMI TCP Connection(77)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
13-02-2020 00:29:15.421 [DiscoveryClient-InstanceInfoReplicator-0] ERROR Cheta314718101 - nes-product - com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(91) - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
13-02-2020 00:29:15.422 [DiscoveryClient-InstanceInfoReplicator-0] WARN  Cheta314718101 - nes-product - com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(130) - Request execution failed with message: java.net.ConnectException: Connection refused: connect
13-02-2020 00:29:15.751 [DiscoveryClient-HeartbeatExecutor-0] ERROR Cheta314718101 - nes-product - com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(83) - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
13-02-2020 00:29:15.751 [DiscoveryClient-CacheRefreshExecutor-0] ERROR Cheta314718101 - nes-product - com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(83) - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1103)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:985)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
13-02-2020 00:29:15.752 [DiscoveryClient-HeartbeatExecutor-0] WARN  Cheta314718101 - nes-product - com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(130) - Request execution failed with message: java.net.ConnectException: Connection refused: connect
13-02-2020 00:29:15.752 [DiscoveryClient-CacheRefreshExecutor-0] WARN  Cheta314718101 - nes-product - com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(130) - Request execution failed with message: java.net.ConnectException: Connection refused: connect
13-02-2020 00:29:15.754 [DiscoveryClient-HeartbeatExecutor-0] ERROR Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.renew(878) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
13-02-2020 00:29:15.754 [DiscoveryClient-CacheRefreshExecutor-0] ERROR Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(990) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1103)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:985)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
13-02-2020 00:29:18.470 [RMI TCP Connection(77)-127.0.0.1] ERROR Cheta314718101 - nes-product - com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(83) - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:941)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:919)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1468)
	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1309)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1401)
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:324)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 82 common frames omitted
13-02-2020 00:29:18.471 [RMI TCP Connection(77)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(130) - Request execution failed with message: java.net.ConnectException: Connection refused: connect
13-02-2020 00:29:18.472 [RMI TCP Connection(77)-127.0.0.1] ERROR Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(944) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:941)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:919)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1468)
	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1309)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1401)
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:324)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
13-02-2020 00:29:18.483 [RMI TCP Connection(77)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
13-02-2020 00:29:18.487 [RMI TCP Connection(77)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
13-02-2020 00:29:19.000 [RMI TCP Connection(77)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
13-02-2020 00:29:19.003 [RMI TCP Connection(77)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
13-02-2020 00:29:19.011 [RMI TCP Connection(77)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
13-02-2020 00:29:19.017 [RMI TCP Connection(77)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 13:50:20.711 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 13:50:21.679 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c750e2e5-89d3-327b-8bdc-4ec330ba77bc
15-02-2020 13:50:21.789 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 13:50:22.004 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 13:50:22.012 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 13:50:22.013 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 13:50:22.014 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 13:50:22.144 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 13:50:22.145 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1409 ms
15-02-2020 13:50:22.207 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 13:50:22.551 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 13:50:22.571 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 13:50:22.572 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 13:50:22.576 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 13:50:22.576 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 13:50:22.751 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 13:50:25.865 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 13:50:25.909 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 13:50:25.944 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 13:50:25.990 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 13:50:26.170 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 13:50:26.171 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 13:50:26.293 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 13:50:26.294 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 13:50:26.508 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 13:50:27.895 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 13:50:27.896 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 13:50:27.897 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 13:50:27.897 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 13:50:27.897 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 13:50:27.897 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 13:50:27.898 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 13:50:28.139 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 13:50:28.143 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 13:50:28.147 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 13:50:28.157 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581754828153 with initial instances count: 1
15-02-2020 13:50:28.160 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 13:50:28.161 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581754828161, current=UP, previous=STARTING]
15-02-2020 13:50:28.165 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 13:50:28.166 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 13:50:28.216 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 13:50:28.227 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 13:50:28.371 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 13:50:28.598 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 13:50:28.636 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 13:50:28.637 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 13:50:29.901 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 12.583 seconds (JVM running for 14.191)
15-02-2020 13:52:21.116 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 13:52:21.116 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 13:52:21.124 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 8 ms
15-02-2020 13:55:27.908 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:00:27.911 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:02:08.509 [RMI TCP Connection(20)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 14:02:08.510 [RMI TCP Connection(20)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 14:02:08.510 [RMI TCP Connection(20)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581755528510, current=DOWN, previous=UP]
15-02-2020 14:02:08.511 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 14:02:08.514 [RMI TCP Connection(20)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 14:02:08.521 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 14:02:08.524 [RMI TCP Connection(20)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 14:02:11.525 [RMI TCP Connection(20)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 14:02:11.530 [RMI TCP Connection(20)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 14:02:11.539 [RMI TCP Connection(20)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 14:02:11.543 [RMI TCP Connection(20)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 14:02:12.254 [RMI TCP Connection(20)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 14:02:12.257 [RMI TCP Connection(20)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 14:02:12.263 [RMI TCP Connection(20)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 14:02:12.268 [RMI TCP Connection(20)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 14:02:22.771 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 14:02:23.774 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c750e2e5-89d3-327b-8bdc-4ec330ba77bc
15-02-2020 14:02:23.877 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 14:02:24.078 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 14:02:24.087 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 14:02:24.088 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 14:02:24.088 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 14:02:24.232 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 14:02:24.232 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1444 ms
15-02-2020 14:02:24.297 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 14:02:24.636 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 14:02:24.661 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 14:02:24.661 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 14:02:24.666 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 14:02:24.666 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 14:02:24.832 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 14:02:28.506 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 14:02:28.554 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 14:02:28.593 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 14:02:28.631 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 14:02:28.808 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 14:02:28.808 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 14:02:28.942 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 14:02:28.943 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 14:02:29.132 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:02:29.731 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 14:02:29.731 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 14:02:29.731 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 14:02:29.731 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 14:02:29.732 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 14:02:29.732 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 14:02:29.732 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 14:02:29.914 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 14:02:29.918 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 14:02:29.920 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 14:02:29.926 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581755549925 with initial instances count: 1
15-02-2020 14:02:29.927 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 14:02:29.928 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581755549928, current=UP, previous=STARTING]
15-02-2020 14:02:29.930 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 14:02:29.930 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 14:02:29.951 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 14:02:29.975 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 14:02:30.010 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 14:02:30.192 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 14:02:30.218 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 14:02:30.219 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 14:02:31.228 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 11.427 seconds (JVM running for 13.234)
15-02-2020 14:02:54.823 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 14:02:54.823 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 14:02:54.831 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 8 ms
15-02-2020 14:05:59.735 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:1111
15-02-2020 14:05:59.740 [http-nio-8080-exec-2] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 14:07:29.734 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:09:51.175 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 14:09:51.176 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 14:09:51.177 [RMI TCP Connection(17)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581755991177, current=DOWN, previous=UP]
15-02-2020 14:09:51.208 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 14:09:51.207 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 14:09:51.212 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 14:09:51.212 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 14:09:54.215 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 14:09:54.221 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 14:09:54.230 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 14:09:54.232 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 14:09:54.797 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 14:09:54.800 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 14:09:54.807 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 14:09:54.812 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 14:10:04.748 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 14:10:05.709 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c750e2e5-89d3-327b-8bdc-4ec330ba77bc
15-02-2020 14:10:05.851 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 14:10:06.060 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 14:10:06.069 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 14:10:06.070 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 14:10:06.070 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 14:10:06.225 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 14:10:06.225 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1459 ms
15-02-2020 14:10:06.289 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 14:10:06.666 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 14:10:06.687 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 14:10:06.687 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 14:10:06.692 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 14:10:06.692 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 14:10:06.865 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 14:10:09.924 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 14:10:09.965 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 14:10:10.001 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 14:10:10.045 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 14:10:10.227 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 14:10:10.227 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 14:10:10.362 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 14:10:10.363 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 14:10:10.631 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:10:11.612 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 14:10:11.614 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 14:10:11.615 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 14:10:11.615 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 14:10:11.615 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 14:10:11.616 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 14:10:11.616 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 14:10:11.805 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 14:10:11.808 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 14:10:11.811 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 14:10:11.817 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581756011816 with initial instances count: 1
15-02-2020 14:10:11.818 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 14:10:11.819 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581756011819, current=UP, previous=STARTING]
15-02-2020 14:10:11.821 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 14:10:11.824 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 14:10:11.848 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 14:10:11.884 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 14:10:11.920 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 14:10:12.142 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 14:10:12.176 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 14:10:12.178 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 14:10:13.456 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 11.779 seconds (JVM running for 13.295)
15-02-2020 14:10:33.607 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 14:10:33.607 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 14:10:33.615 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 7 ms
15-02-2020 14:10:33.646 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:1111
15-02-2020 14:10:33.651 [http-nio-8080-exec-1] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 14:11:36.946 [http-nio-8080-exec-6] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 14:11:36.948 [http-nio-8080-exec-6] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 14:12:47.888 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 14:12:47.889 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 14:12:47.889 [RMI TCP Connection(11)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581756167889, current=DOWN, previous=UP]
15-02-2020 14:12:47.889 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 14:12:47.917 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 14:12:47.921 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 14:12:47.921 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 14:12:50.922 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 14:12:50.927 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 14:12:50.935 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 14:12:50.937 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 14:12:52.455 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 14:12:52.459 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 14:12:52.466 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 14:12:52.471 [RMI TCP Connection(11)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 14:13:07.269 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 14:13:08.533 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c750e2e5-89d3-327b-8bdc-4ec330ba77bc
15-02-2020 14:13:08.702 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 14:13:09.015 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 14:13:09.039 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 14:13:09.040 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 14:13:09.040 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 14:13:09.308 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 14:13:09.309 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 2016 ms
15-02-2020 14:13:09.412 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 14:13:11.623 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 14:13:11.651 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 14:13:11.652 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 14:13:11.657 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 14:13:11.658 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 14:13:11.857 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 14:13:20.984 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 14:13:21.038 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 14:13:21.101 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 14:13:21.182 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 14:13:21.419 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 14:13:21.419 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 14:13:21.565 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 14:13:21.566 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 14:13:21.778 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:13:22.981 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 14:13:22.982 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 14:13:22.982 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 14:13:22.983 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 14:13:22.983 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 14:13:22.983 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 14:13:22.983 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 14:13:23.243 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 14:13:23.245 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 14:13:23.248 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 14:13:23.254 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581756203252 with initial instances count: 1
15-02-2020 14:13:23.255 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 14:13:23.257 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581756203257, current=UP, previous=STARTING]
15-02-2020 14:13:23.260 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 14:13:23.268 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 14:13:23.290 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 14:13:23.313 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 14:13:23.356 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 14:13:23.598 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 14:13:23.625 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 14:13:23.641 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 14:13:25.803 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 24.688 seconds (JVM running for 27.808)
15-02-2020 14:14:36.909 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 14:14:36.909 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 14:14:36.916 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 7 ms
15-02-2020 14:14:36.945 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 14:14:36.952 [http-nio-8080-exec-1] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 14:18:22.988 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:21:59.395 [RMI TCP Connection(16)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 14:21:59.396 [RMI TCP Connection(16)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 14:21:59.397 [RMI TCP Connection(16)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581756719397, current=DOWN, previous=UP]
15-02-2020 14:21:59.397 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 14:21:59.405 [RMI TCP Connection(16)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 14:21:59.411 [RMI TCP Connection(16)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 14:21:59.411 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 14:21:59.412 [RMI TCP Connection(16)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 14:21:59.417 [RMI TCP Connection(16)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 14:21:59.427 [RMI TCP Connection(16)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 14:21:59.429 [RMI TCP Connection(16)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 14:22:00.284 [RMI TCP Connection(16)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 14:22:00.287 [RMI TCP Connection(16)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 14:22:00.297 [RMI TCP Connection(16)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 14:22:00.301 [RMI TCP Connection(16)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 14:22:43.258 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 14:22:44.239 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c750e2e5-89d3-327b-8bdc-4ec330ba77bc
15-02-2020 14:22:44.357 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 14:22:44.573 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 14:22:44.585 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 14:22:44.586 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 14:22:44.587 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 14:22:44.733 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 14:22:44.734 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1459 ms
15-02-2020 14:22:44.803 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 14:22:45.205 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 14:22:45.226 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 14:22:45.227 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 14:22:45.231 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 14:22:45.232 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 14:22:45.409 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 14:22:48.529 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 14:22:48.570 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 14:22:48.605 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 14:22:48.642 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 14:22:48.849 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 14:22:48.850 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 14:22:48.985 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 14:22:48.986 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 14:22:49.212 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:22:49.843 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 14:22:49.843 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 14:22:49.844 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 14:22:49.844 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 14:22:49.844 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 14:22:49.844 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 14:22:49.845 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 14:22:50.038 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 14:22:50.041 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 14:22:50.049 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 14:22:50.054 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581756770052 with initial instances count: 1
15-02-2020 14:22:50.055 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 14:22:50.056 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581756770056, current=UP, previous=STARTING]
15-02-2020 14:22:50.059 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 14:22:50.063 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 14:22:50.080 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 14:22:50.111 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 14:22:50.148 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 14:22:50.322 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 14:22:50.350 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 14:22:50.352 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 14:22:51.273 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 11.239 seconds (JVM running for 12.726)
15-02-2020 14:24:40.947 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 14:24:40.948 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 14:24:40.956 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 8 ms
15-02-2020 14:24:40.987 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 14:24:40.992 [http-nio-8080-exec-1] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 14:26:33.786 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 14:26:33.787 [http-nio-8080-exec-2] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 14:27:38.329 [http-nio-8080-exec-4] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.addProducts(65) - Received Add products to store request
15-02-2020 14:27:49.848 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:28:05.573 [http-nio-8080-exec-5] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 14:29:43.131 [http-nio-8080-exec-8] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 14:30:52.330 [http-nio-8080-exec-10] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.addProducts(65) - Received Add products to store request
15-02-2020 14:31:06.525 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 14:31:25.821 [http-nio-8080-exec-9] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getAllProductsBySearchText(52) - Requested search text:null
15-02-2020 14:31:25.821 [http-nio-8080-exec-9] INFO  Cheta314718101 - nes-product - com.nagarro.nes.services.impl.ProductServiceImpl.getAllProductsBySearchText(35) - No. of products availble in store:7
15-02-2020 14:31:39.819 [http-nio-8080-exec-10] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.deleteProducts(72) - Recieved Delete prouducts request
15-02-2020 14:32:11.791 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.addProducts(65) - Received Add products to store request
15-02-2020 14:32:18.324 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 14:32:49.850 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:33:51.259 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 14:33:51.260 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 14:33:51.261 [RMI TCP Connection(17)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581757431261, current=DOWN, previous=UP]
15-02-2020 14:33:51.263 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 14:33:51.268 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 14:33:51.269 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 14:33:51.276 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 14:33:54.270 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 14:33:54.276 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 14:33:54.284 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 14:33:54.286 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 14:33:54.882 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 14:33:54.885 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 14:33:54.891 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 14:33:54.895 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 14:34:04.144 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 14:34:05.087 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c750e2e5-89d3-327b-8bdc-4ec330ba77bc
15-02-2020 14:34:05.196 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 14:34:05.406 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 14:34:05.415 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 14:34:05.416 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 14:34:05.416 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 14:34:05.559 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 14:34:05.559 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1395 ms
15-02-2020 14:34:05.621 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 14:34:05.957 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 14:34:05.977 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 14:34:05.978 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 14:34:05.982 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 14:34:05.983 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 14:34:06.160 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 14:34:09.209 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 14:34:09.249 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 14:34:09.283 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 14:34:09.319 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 14:34:09.481 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 14:34:09.482 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 14:34:09.619 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 14:34:09.620 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 14:34:09.775 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:34:10.402 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 14:34:10.403 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 14:34:10.403 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 14:34:10.403 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 14:34:10.403 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 14:34:10.403 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 14:34:10.404 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 14:34:10.593 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 14:34:10.596 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 14:34:10.598 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 14:34:10.602 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581757450601 with initial instances count: 1
15-02-2020 14:34:10.603 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 14:34:10.604 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581757450604, current=UP, previous=STARTING]
15-02-2020 14:34:10.606 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 14:34:10.606 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 14:34:10.626 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 14:34:10.650 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 14:34:10.698 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 14:34:10.887 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 14:34:10.917 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 14:34:10.918 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 14:34:11.933 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 10.432 seconds (JVM running for 11.822)
15-02-2020 14:35:28.210 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 14:35:28.210 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 14:35:28.217 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 7 ms
15-02-2020 14:35:38.262 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(60) - Request for product with id:11212
15-02-2020 14:35:43.171 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(60) - Request for product with id:11212
15-02-2020 14:39:10.406 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:41:13.654 [http-nio-8080-exec-3] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(60) - Request for product with id:11212eg
15-02-2020 14:41:13.661 [http-nio-8080-exec-3] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 14:41:18.658 [http-nio-8080-exec-4] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(60) - Request for product with id:11212eg
15-02-2020 14:41:18.658 [http-nio-8080-exec-4] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 14:41:28.279 [RMI TCP Connection(15)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 14:41:28.280 [RMI TCP Connection(15)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 14:41:28.280 [RMI TCP Connection(15)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581757888280, current=DOWN, previous=UP]
15-02-2020 14:41:28.281 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 14:41:28.285 [RMI TCP Connection(15)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 14:41:28.288 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 14:41:28.288 [RMI TCP Connection(15)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 14:41:31.290 [RMI TCP Connection(15)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 14:41:31.295 [RMI TCP Connection(15)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 14:41:31.303 [RMI TCP Connection(15)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 14:41:31.305 [RMI TCP Connection(15)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 14:41:32.144 [RMI TCP Connection(15)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 14:41:32.148 [RMI TCP Connection(15)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 14:41:32.154 [RMI TCP Connection(15)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 14:41:32.160 [RMI TCP Connection(15)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 14:41:41.740 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 14:41:42.706 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c750e2e5-89d3-327b-8bdc-4ec330ba77bc
15-02-2020 14:41:42.835 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 14:41:43.037 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 14:41:43.046 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 14:41:43.047 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 14:41:43.048 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 14:41:43.201 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 14:41:43.202 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1444 ms
15-02-2020 14:41:43.271 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 14:41:43.645 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 14:41:43.674 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 14:41:43.674 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 14:41:43.680 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 14:41:43.680 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 14:41:43.860 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 14:41:46.927 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 14:41:46.970 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 14:41:47.004 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 14:41:47.045 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 14:41:47.208 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 14:41:47.208 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 14:41:47.330 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 14:41:47.331 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 14:41:47.508 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:41:48.153 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 14:41:48.154 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 14:41:48.154 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 14:41:48.155 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 14:41:48.155 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 14:41:48.155 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 14:41:48.155 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 14:41:48.333 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 14:41:48.336 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 14:41:48.348 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 14:41:48.352 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581757908351 with initial instances count: 2
15-02-2020 14:41:48.354 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 14:41:48.354 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581757908354, current=UP, previous=STARTING]
15-02-2020 14:41:48.357 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 14:41:48.359 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 14:41:48.376 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 14:41:48.405 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 14:41:48.439 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 14:41:48.625 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 14:41:48.667 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 14:41:48.669 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 14:41:49.625 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 10.82 seconds (JVM running for 12.256)
15-02-2020 14:42:22.268 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 14:42:22.268 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 14:42:22.277 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 8 ms
15-02-2020 14:42:22.309 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212eg
15-02-2020 14:42:22.314 [http-nio-8080-exec-1] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 14:43:56.943 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212eg
15-02-2020 14:43:56.944 [http-nio-8080-exec-2] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 14:46:48.160 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:50:59.828 [http-nio-8080-exec-4] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212eg
15-02-2020 14:50:59.829 [http-nio-8080-exec-4] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 14:51:48.191 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 14:56:48.196 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 15:01:48.198 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 15:02:32.619 [http-nio-8080-exec-6] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212eg
15-02-2020 15:02:32.620 [http-nio-8080-exec-6] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 15:02:58.677 [http-nio-8080-exec-7] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212eg
15-02-2020 15:02:58.677 [http-nio-8080-exec-7] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 15:03:30.206 [http-nio-8080-exec-8] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212
15-02-2020 15:03:30.217 [http-nio-8080-exec-9] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212eg
15-02-2020 15:03:30.217 [http-nio-8080-exec-9] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 15:06:48.207 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 15:07:19.211 [http-nio-8080-exec-10] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212
15-02-2020 15:11:48.209 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 15:12:51.130 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212
15-02-2020 15:15:11.560 [http-nio-8080-exec-4] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212
15-02-2020 15:15:30.987 [http-nio-8080-exec-5] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212
15-02-2020 15:15:38.683 [http-nio-8080-exec-6] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212
15-02-2020 15:16:05.595 [http-nio-8080-exec-7] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212
15-02-2020 15:16:20.604 [http-nio-8080-exec-8] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212
15-02-2020 15:16:20.611 [http-nio-8080-exec-9] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11212eg
15-02-2020 15:16:20.611 [http-nio-8080-exec-9] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 15:16:48.210 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 15:17:58.368 [RMI TCP Connection(45)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 15:17:58.376 [RMI TCP Connection(45)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 15:17:58.377 [RMI TCP Connection(45)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581760078377, current=DOWN, previous=UP]
15-02-2020 15:17:58.378 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 15:17:58.384 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 15:17:58.394 [RMI TCP Connection(45)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 15:17:58.401 [RMI TCP Connection(45)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 15:18:01.405 [RMI TCP Connection(45)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 15:18:01.411 [RMI TCP Connection(45)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 15:18:01.420 [RMI TCP Connection(45)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 15:18:01.424 [RMI TCP Connection(45)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 15:18:01.952 [RMI TCP Connection(45)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 15:18:01.956 [RMI TCP Connection(45)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 15:18:01.965 [RMI TCP Connection(45)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 15:18:01.970 [RMI TCP Connection(45)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 16:15:16.269 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 16:15:17.027 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c750e2e5-89d3-327b-8bdc-4ec330ba77bc
15-02-2020 16:15:17.118 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 16:15:17.277 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 16:15:17.283 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 16:15:17.284 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 16:15:17.284 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 16:15:17.401 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 16:15:17.401 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1114 ms
15-02-2020 16:15:17.448 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 16:15:17.755 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 16:15:17.770 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 16:15:17.771 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 16:15:17.774 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 16:15:17.774 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 16:15:17.918 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 16:15:20.372 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 16:15:20.411 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 16:15:20.459 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 16:15:20.496 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 16:15:20.622 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 16:15:20.623 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 16:15:20.724 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 16:15:20.724 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 16:15:20.874 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 16:15:21.344 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 16:15:21.344 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 16:15:21.345 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 16:15:21.345 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 16:15:21.345 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 16:15:21.345 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 16:15:21.345 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 16:15:21.496 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 16:15:21.499 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 16:15:21.501 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 16:15:21.504 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581763521504 with initial instances count: 2
15-02-2020 16:15:21.506 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 16:15:21.507 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581763521507, current=UP, previous=STARTING]
15-02-2020 16:15:21.509 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 16:15:21.509 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 16:15:21.527 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 16:15:21.548 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 16:15:21.575 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 16:15:21.725 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 16:15:21.747 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 16:15:21.748 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 16:15:22.386 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 8.147 seconds (JVM running for 9.187)
15-02-2020 16:17:56.177 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 16:17:56.177 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 16:17:56.183 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 6 ms
15-02-2020 16:18:06.217 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(65) - Request for product with id:string
15-02-2020 16:18:06.223 [http-nio-8080-exec-1] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 16:18:11.134 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(65) - Request for product with id:string
15-02-2020 16:18:11.134 [http-nio-8080-exec-2] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 16:20:21.349 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 16:22:24.297 [http-nio-8080-exec-3] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(65) - Request for product with id:string
15-02-2020 16:22:24.298 [http-nio-8080-exec-3] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 16:22:29.301 [http-nio-8080-exec-4] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(65) - Request for product with id:string
15-02-2020 16:22:29.301 [http-nio-8080-exec-4] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 16:25:21.379 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 16:28:02.847 [http-nio-8080-exec-5] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(65) - Request for product with id:string
15-02-2020 16:28:02.848 [http-nio-8080-exec-5] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 16:28:07.853 [http-nio-8080-exec-6] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(65) - Request for product with id:string
15-02-2020 16:28:07.853 [http-nio-8080-exec-6] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 16:29:33.490 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 16:29:33.491 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 16:29:33.491 [RMI TCP Connection(22)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581764373491, current=DOWN, previous=UP]
15-02-2020 16:29:33.491 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 16:29:33.494 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 16:29:33.496 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 16:29:33.497 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 16:29:36.498 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 16:29:36.503 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 16:29:36.512 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 16:29:36.513 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 16:29:36.971 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 16:29:36.973 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 16:29:36.976 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 16:29:36.980 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 16:29:45.290 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 16:29:46.053 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c750e2e5-89d3-327b-8bdc-4ec330ba77bc
15-02-2020 16:29:46.135 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 16:29:46.286 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 16:29:46.292 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 16:29:46.293 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 16:29:46.293 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 16:29:46.403 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 16:29:46.404 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1100 ms
15-02-2020 16:29:46.453 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 16:29:46.713 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 16:29:46.729 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 16:29:46.729 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 16:29:46.732 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 16:29:46.733 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 16:29:46.866 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 16:29:49.161 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 16:29:49.194 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 16:29:49.219 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 16:29:49.245 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 16:29:49.367 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 16:29:49.367 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 16:29:49.469 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 16:29:49.470 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 16:29:49.616 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 16:29:50.101 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 16:29:50.101 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 16:29:50.101 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 16:29:50.101 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 16:29:50.102 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 16:29:50.102 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 16:29:50.102 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 16:29:50.241 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 16:29:50.244 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 16:29:50.246 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 16:29:50.249 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581764390248 with initial instances count: 2
15-02-2020 16:29:50.250 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 16:29:50.251 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581764390251, current=UP, previous=STARTING]
15-02-2020 16:29:50.253 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 16:29:50.254 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 16:29:50.270 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 16:29:50.290 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 16:29:50.327 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 16:29:50.498 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 16:29:50.523 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 16:29:50.524 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 16:29:51.241 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 8.033 seconds (JVM running for 9.139)
15-02-2020 16:30:10.639 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 16:30:10.639 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 16:30:10.648 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 9 ms
15-02-2020 16:30:10.674 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 16:30:15.593 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 16:30:20.678 [http-nio-8080-exec-2] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 16:30:25.593 [http-nio-8080-exec-1] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 16:32:47.841 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 16:32:47.842 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 16:32:47.842 [RMI TCP Connection(10)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581764567842, current=DOWN, previous=UP]
15-02-2020 16:32:47.843 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 16:32:47.845 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 16:32:47.847 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 16:32:47.849 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 16:32:50.851 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 16:32:50.851 [DiscoveryClient-0] WARN  Cheta314718101 - nes-product - com.netflix.discovery.TimedSupervisorTask.run(88) - task supervisor shutting down, can't accept the task
15-02-2020 16:32:50.860 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 16:32:50.866 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 16:32:50.868 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 16:32:51.294 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 16:32:51.295 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 16:32:51.299 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 16:32:51.303 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 16:51:34.223 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 16:51:34.967 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c750e2e5-89d3-327b-8bdc-4ec330ba77bc
15-02-2020 16:51:35.049 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 16:51:35.226 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 16:51:35.233 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 16:51:35.234 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 16:51:35.235 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 16:51:35.354 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 16:51:35.354 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1118 ms
15-02-2020 16:51:35.404 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 16:51:35.679 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 16:51:35.693 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 16:51:35.694 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 16:51:35.697 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 16:51:35.697 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 16:51:35.841 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 16:51:38.122 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 16:51:38.156 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 16:51:38.189 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 16:51:38.223 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 16:51:38.374 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 16:51:38.374 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 16:51:38.470 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 16:51:38.470 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 16:51:38.616 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 16:51:39.052 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 16:51:39.052 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 16:51:39.053 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 16:51:39.053 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 16:51:39.054 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 16:51:39.054 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 16:51:39.054 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 16:51:39.194 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 16:51:39.196 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 16:51:39.198 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 16:51:39.201 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581765699200 with initial instances count: 2
15-02-2020 16:51:39.202 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 16:51:39.203 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581765699203, current=UP, previous=STARTING]
15-02-2020 16:51:39.205 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 16:51:39.205 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 16:51:39.222 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 16:51:39.242 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 16:51:39.275 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 16:51:39.527 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 16:51:39.568 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 16:51:39.571 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 16:51:40.335 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 8.226 seconds (JVM running for 9.321)
15-02-2020 16:52:16.328 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 16:52:16.328 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 16:52:16.336 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 8 ms
15-02-2020 16:52:16.360 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 16:52:21.285 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 16:52:26.365 [http-nio-8080-exec-1] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 16:52:31.289 [http-nio-8080-exec-2] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 16:55:36.439 [http-nio-8080-exec-3] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 16:55:41.443 [http-nio-8080-exec-4] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 16:55:46.441 [http-nio-8080-exec-3] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 16:55:51.446 [http-nio-8080-exec-4] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 16:56:39.057 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 16:59:05.604 [RMI TCP Connection(18)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 16:59:05.605 [RMI TCP Connection(18)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 16:59:05.606 [RMI TCP Connection(18)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581766145606, current=DOWN, previous=UP]
15-02-2020 16:59:05.606 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 16:59:05.609 [RMI TCP Connection(18)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 16:59:05.611 [RMI TCP Connection(18)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 16:59:05.612 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 16:59:05.613 [RMI TCP Connection(18)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 16:59:05.619 [RMI TCP Connection(18)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 16:59:05.626 [RMI TCP Connection(18)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 16:59:05.628 [RMI TCP Connection(18)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 16:59:06.268 [RMI TCP Connection(18)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 16:59:06.270 [RMI TCP Connection(18)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 16:59:06.274 [RMI TCP Connection(18)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 16:59:06.278 [RMI TCP Connection(18)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 16:59:15.702 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 16:59:16.647 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c750e2e5-89d3-327b-8bdc-4ec330ba77bc
15-02-2020 16:59:16.754 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 16:59:16.931 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 16:59:16.938 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 16:59:16.939 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 16:59:16.940 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 16:59:17.062 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 16:59:17.063 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1342 ms
15-02-2020 16:59:17.112 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 16:59:17.448 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 16:59:17.466 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 16:59:17.466 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 16:59:17.470 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 16:59:17.470 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 16:59:17.729 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 16:59:20.096 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 16:59:20.152 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 16:59:20.180 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 16:59:20.210 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 16:59:20.329 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 16:59:20.330 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 16:59:20.437 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 16:59:20.438 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 16:59:20.577 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 16:59:21.018 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 16:59:21.018 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 16:59:21.018 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 16:59:21.019 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 16:59:21.019 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 16:59:21.019 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 16:59:21.019 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 16:59:21.154 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 16:59:21.157 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 16:59:21.159 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 16:59:21.162 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581766161161 with initial instances count: 2
15-02-2020 16:59:21.163 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 16:59:21.164 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581766161164, current=UP, previous=STARTING]
15-02-2020 16:59:21.166 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 16:59:21.167 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 16:59:21.186 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 16:59:21.205 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 16:59:21.236 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 16:59:21.359 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 16:59:21.396 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 16:59:21.397 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 16:59:22.252 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 9.072 seconds (JVM running for 10.792)
15-02-2020 16:59:46.504 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 16:59:46.505 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 16:59:46.510 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 5 ms
15-02-2020 16:59:46.540 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string
15-02-2020 16:59:46.546 [http-nio-8080-exec-1] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:54)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:54)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 17:04:21.029 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 17:09:21.032 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 17:16:15.833 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 17:21:16.010 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 17:26:16.012 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 17:31:16.014 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 17:36:16.015 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 17:41:16.017 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 17:46:16.017 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 17:51:16.019 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:01:57.534 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:06:57.535 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:11:57.633 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:16:57.636 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:17:38.562 [RMI TCP Connection(81)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 18:17:38.570 [RMI TCP Connection(81)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 18:17:38.571 [RMI TCP Connection(81)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581770858571, current=DOWN, previous=UP]
15-02-2020 18:17:38.572 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 18:17:38.579 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 18:17:38.596 [RMI TCP Connection(81)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 18:17:38.607 [RMI TCP Connection(81)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 18:17:41.611 [RMI TCP Connection(81)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 18:17:41.615 [RMI TCP Connection(81)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 18:17:41.632 [RMI TCP Connection(81)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 18:17:41.637 [RMI TCP Connection(81)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 18:17:42.364 [RMI TCP Connection(81)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 18:17:42.368 [RMI TCP Connection(81)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 18:17:42.378 [RMI TCP Connection(81)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 18:17:42.384 [RMI TCP Connection(81)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 18:17:51.175 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 18:17:52.055 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=f5d4b150-9b51-3082-8991-6098d574f90f
15-02-2020 18:17:52.157 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 18:17:52.331 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 18:17:52.338 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 18:17:52.339 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 18:17:52.339 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 18:17:52.454 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 18:17:52.454 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1260 ms
15-02-2020 18:17:52.529 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 18:17:52.912 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 18:17:52.929 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 18:17:52.929 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 18:17:52.933 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 18:17:52.934 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 18:17:53.021 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 18:17:56.129 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 18:17:56.165 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 18:17:56.191 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 18:17:56.225 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 18:17:56.356 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 18:17:56.356 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 18:17:56.486 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 18:17:56.487 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 18:17:56.650 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:17:57.095 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 18:17:57.095 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 18:17:57.095 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 18:17:57.096 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 18:17:57.096 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 18:17:57.096 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 18:17:57.096 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 18:17:57.245 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 18:17:57.248 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 18:17:57.251 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 18:17:57.254 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581770877254 with initial instances count: 1
15-02-2020 18:17:57.256 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 18:17:57.256 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581770877256, current=UP, previous=STARTING]
15-02-2020 18:17:57.258 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 18:17:57.258 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 18:17:57.275 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 18:17:57.294 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 18:17:57.321 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 18:17:57.454 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 18:17:57.475 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 18:17:57.476 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 18:17:58.176 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 9.484 seconds (JVM running for 10.574)
15-02-2020 18:22:57.100 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:25:48.414 [RMI TCP Connection(19)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 18:25:48.416 [RMI TCP Connection(19)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 18:25:48.416 [RMI TCP Connection(19)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581771348416, current=DOWN, previous=UP]
15-02-2020 18:25:48.416 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 18:25:48.421 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 18:25:48.423 [RMI TCP Connection(19)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 18:25:48.427 [RMI TCP Connection(19)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 18:25:51.428 [RMI TCP Connection(19)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 18:25:51.432 [RMI TCP Connection(19)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 18:25:51.440 [RMI TCP Connection(19)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 18:25:51.442 [RMI TCP Connection(19)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 18:25:51.880 [RMI TCP Connection(19)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 18:25:51.884 [RMI TCP Connection(19)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 18:25:51.888 [RMI TCP Connection(19)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 18:26:00.078 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 18:26:00.858 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c207c2a3-901b-3793-8f12-ee07f998802e
15-02-2020 18:26:00.961 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 18:26:01.119 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 18:26:01.125 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 18:26:01.126 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 18:26:01.126 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 18:26:01.237 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 18:26:01.237 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1140 ms
15-02-2020 18:26:01.294 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 18:26:01.678 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 18:26:01.694 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 18:26:01.694 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 18:26:01.699 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 18:26:01.699 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 18:26:01.779 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 18:26:04.045 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 18:26:04.075 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 18:26:04.126 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 18:26:04.156 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 18:26:04.277 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 18:26:04.278 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 18:26:04.385 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 18:26:04.385 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 18:26:04.541 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:26:05.070 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 18:26:05.070 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 18:26:05.070 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 18:26:05.070 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 18:26:05.071 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 18:26:05.071 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 18:26:05.071 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 18:26:05.278 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 18:26:05.280 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 18:26:05.282 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 18:26:05.286 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581771365284 with initial instances count: 1
15-02-2020 18:26:05.287 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 18:26:05.288 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581771365288, current=UP, previous=STARTING]
15-02-2020 18:26:05.290 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 18:26:05.292 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 18:26:05.308 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 18:26:05.341 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 18:26:05.388 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 18:26:05.559 [main] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect(524) - Attempting to connect to: [localhost:8087]
15-02-2020 18:26:05.606 [main] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection(497) - Created new connection: rabbitConnectionFactory#656922a0:0/SimpleConnection@566fe83c [delegate=amqp://guest@127.0.0.1:8087/, localPort= 52460]
15-02-2020 18:26:05.671 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 18:26:05.674 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler.log(129) - Execution of Rabbit message listener failed.
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener threw exception
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.wrapToListenerExecutionFailedExceptionIfNeeded(AbstractMessageListenerContainer.java:1693)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1583)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1498)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1486)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1477)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1421)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:958)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:908)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:81)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1279)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1185)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.amqp.support.converter.MessageConversionException: Failed to convert Message content
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.doFromMessage(AbstractJackson2MessageConverter.java:303)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.fromMessage(AbstractJackson2MessageConverter.java:259)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.fromMessage(AbstractJackson2MessageConverter.java:239)
	at org.springframework.amqp.rabbit.listener.adapter.AbstractAdaptableMessageListener.extractMessage(AbstractAdaptableMessageListener.java:289)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter$MessagingMessageConverterAdapter.extractPayload(MessagingMessageListenerAdapter.java:322)
	at org.springframework.amqp.support.converter.MessagingMessageConverter.fromMessage(MessagingMessageConverter.java:122)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.toMessagingMessage(MessagingMessageListenerAdapter.java:204)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:131)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1579)
	... 10 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.String` out of START_OBJECT token
 at [Source: (String)"{"quantity":10,"productID":"12345"}"; line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1442)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1216)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1126)
	at com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:63)
	at com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:10)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.convertBytesToObject(AbstractJackson2MessageConverter.java:311)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.doFromMessage(AbstractJackson2MessageConverter.java:292)
	... 18 common frames omitted
15-02-2020 18:26:05.675 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler$DefaultExceptionStrategy.isFatal(171) - Fatal message conversion error; message rejected; it will be dropped or routed to a dead letter exchange, if so configured: (Body:'{"quantity":10,"productID":"12345"}' MessageProperties [headers={__TypeId__=com.nagarro.nes.events.dtos.OrderFailedEventProductMessage}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=true, receivedExchange=nes_product_exchange, receivedRoutingKey=product_update, deliveryTag=1, consumerTag=amq.ctag-JMlhxfGHS2ZrpPHlw6lLdA, consumerQueue=product_update_queue])
15-02-2020 18:26:05.675 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] ERROR Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.invokeErrorHandler(1386) - Execution of Rabbit message listener failed, and the error handler threw an exception
org.springframework.amqp.AmqpRejectAndDontRequeueException: Error Handler converted exception to fatal
	at org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler.handleError(ConditionalRejectingErrorHandler.java:116)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:1383)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.handleListenerException(AbstractMessageListenerContainer.java:1667)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1442)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:958)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:908)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:81)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1279)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1185)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener threw exception
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.wrapToListenerExecutionFailedExceptionIfNeeded(AbstractMessageListenerContainer.java:1693)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1583)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1498)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1486)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1477)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1421)
	... 6 common frames omitted
Caused by: org.springframework.amqp.support.converter.MessageConversionException: Failed to convert Message content
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.doFromMessage(AbstractJackson2MessageConverter.java:303)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.fromMessage(AbstractJackson2MessageConverter.java:259)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.fromMessage(AbstractJackson2MessageConverter.java:239)
	at org.springframework.amqp.rabbit.listener.adapter.AbstractAdaptableMessageListener.extractMessage(AbstractAdaptableMessageListener.java:289)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter$MessagingMessageConverterAdapter.extractPayload(MessagingMessageListenerAdapter.java:322)
	at org.springframework.amqp.support.converter.MessagingMessageConverter.fromMessage(MessagingMessageConverter.java:122)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.toMessagingMessage(MessagingMessageListenerAdapter.java:204)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:131)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1579)
	... 10 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.String` out of START_OBJECT token
 at [Source: (String)"{"quantity":10,"productID":"12345"}"; line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1442)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1216)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1126)
	at com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:63)
	at com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:10)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.convertBytesToObject(AbstractJackson2MessageConverter.java:311)
	at org.springframework.amqp.support.converter.AbstractJackson2MessageConverter.doFromMessage(AbstractJackson2MessageConverter.java:292)
	... 18 common frames omitted
15-02-2020 18:26:05.692 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 18:26:05.692 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 18:26:06.513 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 8.558 seconds (JVM running for 9.601)
15-02-2020 18:30:37.063 [RMI TCP Connection(13)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 18:30:37.064 [RMI TCP Connection(13)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 18:30:37.065 [RMI TCP Connection(13)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581771637065, current=DOWN, previous=UP]
15-02-2020 18:30:37.066 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 18:30:37.073 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 18:30:37.073 [RMI TCP Connection(13)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(640) - Waiting for workers to finish.
15-02-2020 18:30:37.901 [RMI TCP Connection(13)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(643) - Successfully waited for workers to finish.
15-02-2020 18:30:37.906 [RMI TCP Connection(13)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown(1231) - Shutdown ignored - container is not active already
15-02-2020 18:30:37.907 [RMI TCP Connection(13)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 18:30:37.917 [RMI TCP Connection(13)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 18:30:40.919 [RMI TCP Connection(13)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 18:30:40.925 [RMI TCP Connection(13)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 18:30:40.932 [RMI TCP Connection(13)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 18:30:40.933 [RMI TCP Connection(13)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 18:30:41.420 [RMI TCP Connection(13)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 18:30:41.426 [RMI TCP Connection(13)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 18:30:41.429 [RMI TCP Connection(13)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 18:30:49.528 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 18:30:50.283 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c207c2a3-901b-3793-8f12-ee07f998802e
15-02-2020 18:30:50.376 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 18:30:50.535 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 18:30:50.541 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 18:30:50.542 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 18:30:50.542 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 18:30:50.656 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 18:30:50.656 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1115 ms
15-02-2020 18:30:50.708 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 18:30:51.074 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 18:30:51.090 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 18:30:51.090 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 18:30:51.094 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 18:30:51.094 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 18:30:51.181 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 18:30:53.391 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 18:30:53.423 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 18:30:53.470 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 18:30:53.498 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 18:30:53.619 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 18:30:53.619 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 18:30:53.714 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 18:30:53.714 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 18:30:53.863 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:30:54.305 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 18:30:54.306 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 18:30:54.306 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 18:30:54.306 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 18:30:54.306 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 18:30:54.307 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 18:30:54.307 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 18:30:54.460 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 18:30:54.462 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 18:30:54.464 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 18:30:54.467 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581771654466 with initial instances count: 2
15-02-2020 18:30:54.468 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 18:30:54.468 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581771654468, current=UP, previous=STARTING]
15-02-2020 18:30:54.470 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 18:30:54.470 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 18:30:54.486 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 18:30:54.506 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 18:30:54.533 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 18:30:54.644 [main] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect(524) - Attempting to connect to: [localhost:8087]
15-02-2020 18:30:54.679 [main] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection(497) - Created new connection: rabbitConnectionFactory#4fa822ad:0/SimpleConnection@28367da7 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 52683]
15-02-2020 18:30:54.732 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 18:30:54.750 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 18:30:54.751 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 18:30:55.424 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 7.938 seconds (JVM running for 8.946)
15-02-2020 18:35:54.309 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:40:54.311 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:44:07.077 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 18:44:07.078 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 18:44:07.078 [RMI TCP Connection(22)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581772447078, current=DOWN, previous=UP]
15-02-2020 18:44:07.079 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 18:44:07.084 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 18:44:07.086 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(640) - Waiting for workers to finish.
15-02-2020 18:44:07.461 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(643) - Successfully waited for workers to finish.
15-02-2020 18:44:07.466 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown(1231) - Shutdown ignored - container is not active already
15-02-2020 18:44:07.467 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 18:44:07.477 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 18:44:10.480 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 18:44:10.485 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 18:44:10.494 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 18:44:10.496 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 18:44:10.984 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 18:44:10.989 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 18:44:10.993 [RMI TCP Connection(22)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 18:44:19.563 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 18:44:20.347 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c207c2a3-901b-3793-8f12-ee07f998802e
15-02-2020 18:44:20.442 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 18:44:20.623 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 18:44:20.630 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 18:44:20.630 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 18:44:20.631 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 18:44:20.745 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 18:44:20.745 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1167 ms
15-02-2020 18:44:20.801 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 18:44:21.178 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 18:44:21.194 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 18:44:21.194 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 18:44:21.198 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 18:44:21.199 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 18:44:21.292 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 18:44:23.559 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 18:44:23.595 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 18:44:23.650 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 18:44:23.678 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 18:44:23.796 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 18:44:23.797 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 18:44:23.889 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 18:44:23.889 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 18:44:24.038 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:44:24.481 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 18:44:24.481 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 18:44:24.481 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 18:44:24.481 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 18:44:24.482 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 18:44:24.482 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 18:44:24.482 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 18:44:24.643 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 18:44:24.645 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 18:44:24.647 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 18:44:24.650 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581772464649 with initial instances count: 1
15-02-2020 18:44:24.652 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 18:44:24.652 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581772464652, current=UP, previous=STARTING]
15-02-2020 18:44:24.654 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 18:44:24.654 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 18:44:24.668 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 18:44:24.686 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 18:44:24.715 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 18:44:24.857 [main] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect(524) - Attempting to connect to: [localhost:8087]
15-02-2020 18:44:24.899 [main] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection(497) - Created new connection: rabbitConnectionFactory#5edc70ed:0/SimpleConnection@577bfadb [delegate=amqp://guest@127.0.0.1:8087/, localPort= 53303]
15-02-2020 18:44:24.956 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 18:44:24.975 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 18:44:24.976 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 18:44:25.664 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 8.277 seconds (JVM running for 9.373)
15-02-2020 18:44:36.729 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 18:44:36.730 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 18:44:36.736 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 6 ms
15-02-2020 18:44:50.626 [http-nio-8080-exec-8] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.addProducts(65) - Received Add products to store request
15-02-2020 18:47:33.022 [http-nio-8080-exec-1] WARN  Cheta314718101 - nes-product - org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.logException(199) - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]
15-02-2020 18:48:56.412 [http-nio-8080-exec-3] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getAllProductsBySearchText(52) - Requested search text:string
15-02-2020 18:48:56.413 [http-nio-8080-exec-3] INFO  Cheta314718101 - nes-product - com.nagarro.nes.services.impl.ProductServiceImpl.getAllProductsBySearchText(36) - No. of products availble in store:6
15-02-2020 18:49:24.485 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:54:24.487 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:55:30.932 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 18:55:30.933 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 18:55:30.934 [RMI TCP Connection(17)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581773130934, current=DOWN, previous=UP]
15-02-2020 18:55:30.934 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 18:55:30.938 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 18:55:30.940 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(640) - Waiting for workers to finish.
15-02-2020 18:55:31.612 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(643) - Successfully waited for workers to finish.
15-02-2020 18:55:31.617 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown(1231) - Shutdown ignored - container is not active already
15-02-2020 18:55:31.617 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 18:55:31.626 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 18:55:34.631 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 18:55:34.635 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 18:55:34.642 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 18:55:34.643 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 18:55:35.072 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 18:55:35.074 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 18:55:35.080 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 18:55:35.085 [RMI TCP Connection(17)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 18:55:43.736 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 18:55:44.596 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c207c2a3-901b-3793-8f12-ee07f998802e
15-02-2020 18:55:44.725 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 18:55:44.924 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 18:55:44.931 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 18:55:44.932 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 18:55:44.932 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 18:55:45.043 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 18:55:45.043 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1292 ms
15-02-2020 18:55:45.101 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 18:55:45.656 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 18:55:45.678 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 18:55:45.679 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 18:55:45.683 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 18:55:45.684 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 18:55:45.766 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 18:55:47.930 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 18:55:47.961 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 18:55:48.005 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 18:55:48.035 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 18:55:48.152 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 18:55:48.153 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 18:55:48.251 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 18:55:48.251 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 18:55:48.417 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:55:48.856 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 18:55:48.856 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 18:55:48.856 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 18:55:48.856 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 18:55:48.856 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 18:55:48.856 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 18:55:48.857 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 18:55:49.017 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 18:55:49.022 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 18:55:49.024 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 18:55:49.029 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581773149028 with initial instances count: 2
15-02-2020 18:55:49.031 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 18:55:49.031 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581773149031, current=UP, previous=STARTING]
15-02-2020 18:55:49.033 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 18:55:49.033 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 18:55:49.049 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 18:55:49.066 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 18:55:49.100 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 18:55:49.215 [main] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect(524) - Attempting to connect to: [localhost:8087]
15-02-2020 18:55:49.255 [main] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection(497) - Created new connection: rabbitConnectionFactory#39e69ea7:0/SimpleConnection@99c4993 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 53863]
15-02-2020 18:55:49.315 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 18:55:49.335 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 18:55:49.336 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 18:55:49.983 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 8.507 seconds (JVM running for 9.739)
15-02-2020 18:56:53.431 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 18:56:53.431 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 18:56:53.436 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 5 ms
15-02-2020 18:56:53.482 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.addProducts(65) - Received Add products to store request
15-02-2020 18:58:03.084 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 18:58:03.085 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 18:58:03.085 [RMI TCP Connection(10)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581773283085, current=DOWN, previous=UP]
15-02-2020 18:58:03.086 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 18:58:03.089 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 18:58:03.092 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(640) - Waiting for workers to finish.
15-02-2020 18:58:03.453 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(643) - Successfully waited for workers to finish.
15-02-2020 18:58:03.458 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown(1231) - Shutdown ignored - container is not active already
15-02-2020 18:58:03.459 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 18:58:03.471 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 18:58:06.473 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 18:58:06.478 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 18:58:06.486 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 18:58:06.487 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 18:58:06.926 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 18:58:06.927 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 18:58:06.931 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 18:58:06.934 [RMI TCP Connection(10)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 18:58:14.877 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 18:58:15.667 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c207c2a3-901b-3793-8f12-ee07f998802e
15-02-2020 18:58:15.759 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 18:58:15.911 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 18:58:15.918 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 18:58:15.919 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 18:58:15.920 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 18:58:16.032 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 18:58:16.033 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1142 ms
15-02-2020 18:58:16.101 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 18:58:16.473 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 18:58:16.488 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 18:58:16.489 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 18:58:16.492 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 18:58:16.492 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 18:58:16.574 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 18:58:18.795 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 18:58:18.829 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 18:58:18.874 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 18:58:18.901 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 18:58:19.019 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 18:58:19.020 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 18:58:19.115 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 18:58:19.115 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 18:58:19.272 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 18:58:19.706 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 18:58:19.706 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 18:58:19.707 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 18:58:19.707 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 18:58:19.707 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 18:58:19.707 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 18:58:19.707 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 18:58:19.863 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 18:58:19.865 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 18:58:19.867 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 18:58:19.870 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581773299869 with initial instances count: 2
15-02-2020 18:58:19.871 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 18:58:19.871 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581773299871, current=UP, previous=STARTING]
15-02-2020 18:58:19.873 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 18:58:19.873 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 18:58:19.889 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 18:58:19.906 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 18:58:19.935 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 18:58:20.048 [main] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect(524) - Attempting to connect to: [localhost:8087]
15-02-2020 18:58:20.081 [main] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection(497) - Created new connection: rabbitConnectionFactory#5399f6c5:0/SimpleConnection@516195cf [delegate=amqp://guest@127.0.0.1:8087/, localPort= 54015]
15-02-2020 18:58:20.141 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 18:58:20.160 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 18:58:20.161 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 18:58:20.844 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 8.01 seconds (JVM running for 9.021)
15-02-2020 18:59:38.490 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 18:59:38.491 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 18:59:38.500 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 9 ms
15-02-2020 18:59:38.588 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=10, updateQuantityType=INC]
15-02-2020 19:00:03.430 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=2, updateQuantityType=DEC]
15-02-2020 19:00:03.446 [http-nio-8080-exec-3] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=1, updateQuantityType=DEC]
15-02-2020 19:00:03.450 [http-nio-8080-exec-3] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$4(ProductServiceImpl.java:65)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.updateQuantity(ProductServiceImpl.java:65)
	at com.nagarro.nes.api.ProductController.updateQuantity(ProductController.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 19:03:19.712 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 19:07:57.748 [http-nio-8080-exec-5] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=10, updateQuantityType=INC]
15-02-2020 19:08:18.859 [http-nio-8080-exec-6] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=2, updateQuantityType=DEC]
15-02-2020 19:08:18.879 [http-nio-8080-exec-7] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=1, updateQuantityType=DEC]
15-02-2020 19:08:18.880 [http-nio-8080-exec-7] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$4(ProductServiceImpl.java:65)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.updateQuantity(ProductServiceImpl.java:65)
	at com.nagarro.nes.api.ProductController.updateQuantity(ProductController.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 19:08:19.037 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.events.consumer.ProductUpdateEventConsumer.receivedMessage(30) - Found product:111211
15-02-2020 19:08:19.714 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 19:09:06.387 [http-nio-8080-exec-9] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:111211
15-02-2020 19:12:24.260 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.addProducts(65) - Received Add products to store request
15-02-2020 19:12:35.387 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=2, updateQuantityType=DEC]
15-02-2020 19:12:35.406 [http-nio-8080-exec-3] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=1, updateQuantityType=DEC]
15-02-2020 19:12:56.303 [http-nio-8080-exec-4] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:111211
15-02-2020 19:13:11.630 [http-nio-8080-exec-5] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string123
15-02-2020 19:13:19.716 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 19:13:26.116 [http-nio-8080-exec-6] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=2, updateQuantityType=DEC]
15-02-2020 19:13:26.137 [http-nio-8080-exec-7] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=10, updateQuantityType=DEC]
15-02-2020 19:13:26.140 [http-nio-8080-exec-7] ERROR Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet].log(175) - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is WalletApplicationException [message=Quantity is less then you want to decrease, error=PRODUCT_QUANTITY_UPDATE_FAILED]] with root cause
com.nagarro.nes.exception.ProductUpdateFailedException: Quantity is less then you want to decrease
	at com.nagarro.nes.services.impl.ProductServiceImpl.updateQuantity(ProductServiceImpl.java:72)
	at com.nagarro.nes.api.ProductController.updateQuantity(ProductController.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 19:13:26.174 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.events.consumer.ProductUpdateEventConsumer.receivedMessage(30) - Found product:111211
15-02-2020 19:14:29.745 [http-nio-8080-exec-9] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:string123
15-02-2020 19:14:36.849 [http-nio-8080-exec-10] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getProductById(59) - Request for product with id:11211
15-02-2020 19:14:36.850 [http-nio-8080-exec-10] ERROR Cheta314718101 - nes-product - com.nagarro.nes.exception.advices.ExceptionController.handleException(144) - Exception with error code :notfound.product:{}
com.nagarro.nes.exception.ProductNotFoundException: Product with requested ID not found
	at com.nagarro.nes.services.impl.ProductServiceImpl.lambda$2(ProductServiceImpl.java:55)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at com.nagarro.nes.services.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:55)
	at com.nagarro.nes.api.ProductController.getProductById(ProductController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
15-02-2020 19:14:43.593 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getAllProductsBySearchText(52) - Requested search text:string
15-02-2020 19:14:43.593 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.services.impl.ProductServiceImpl.getAllProductsBySearchText(36) - No. of products availble in store:6
15-02-2020 19:14:50.640 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getAllProductsBySearchText(52) - Requested search text:null
15-02-2020 19:14:50.640 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.services.impl.ProductServiceImpl.getAllProductsBySearchText(36) - No. of products availble in store:6
15-02-2020 19:17:53.397 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 19:17:53.399 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 19:17:53.399 [RMI TCP Connection(35)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581774473399, current=DOWN, previous=UP]
15-02-2020 19:17:53.413 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 19:17:53.421 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 19:17:53.421 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(640) - Waiting for workers to finish.
15-02-2020 19:17:53.666 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(643) - Successfully waited for workers to finish.
15-02-2020 19:17:53.682 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown(1231) - Shutdown ignored - container is not active already
15-02-2020 19:17:53.683 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 19:17:53.707 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 19:17:56.709 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 19:17:56.715 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 19:17:56.723 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 19:17:56.724 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 19:17:57.276 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 19:17:57.277 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 19:17:57.282 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 19:17:57.287 [RMI TCP Connection(35)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 19:18:06.209 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 19:18:07.153 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=c207c2a3-901b-3793-8f12-ee07f998802e
15-02-2020 19:18:07.273 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 19:18:07.474 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 19:18:07.482 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 19:18:07.482 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 19:18:07.483 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 19:18:07.627 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 19:18:07.627 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1399 ms
15-02-2020 19:18:07.712 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 19:18:08.155 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 19:18:08.176 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 19:18:08.176 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 19:18:08.181 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 19:18:08.181 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 19:18:08.279 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 19:18:11.124 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 19:18:11.162 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 19:18:11.219 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 19:18:11.252 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 19:18:11.395 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 19:18:11.396 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 19:18:11.517 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 19:18:11.518 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 19:18:11.694 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 19:18:12.231 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 19:18:12.231 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 19:18:12.232 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 19:18:12.232 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 19:18:12.232 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 19:18:12.232 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 19:18:12.232 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 19:18:12.425 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 19:18:12.428 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 19:18:12.431 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 19:18:12.435 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581774492434 with initial instances count: 1
15-02-2020 19:18:12.437 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 19:18:12.438 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581774492438, current=UP, previous=STARTING]
15-02-2020 19:18:12.441 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 19:18:12.441 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 19:18:12.459 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 19:18:12.483 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 19:18:12.520 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 19:18:12.679 [main] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect(524) - Attempting to connect to: [localhost:8087]
15-02-2020 19:18:12.718 [main] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection(497) - Created new connection: rabbitConnectionFactory#44784e2f:0/SimpleConnection@2de3b052 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 63359]
15-02-2020 19:18:12.787 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 19:18:12.810 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 19:18:12.811 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 19:18:13.605 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 9.938 seconds (JVM running for 11.174)
15-02-2020 19:18:36.416 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 19:18:36.416 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 19:18:36.423 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 7 ms
15-02-2020 19:18:36.453 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getAllProductsBySearchText(52) - Requested search text:null
15-02-2020 19:18:36.453 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.services.impl.ProductServiceImpl.getAllProductsBySearchText(36) - No. of products availble in store:5
15-02-2020 19:18:58.052 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=2, updateQuantityType=DEC]
15-02-2020 19:18:58.076 [http-nio-8080-exec-3] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=100, updateQuantityType=DEC]
15-02-2020 19:18:58.123 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.events.consumer.ProductUpdateEventConsumer.receivedMessage(30) - Found product:111211
15-02-2020 19:22:36.197 [http-nio-8080-exec-5] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=2, updateQuantityType=DEC]
15-02-2020 19:22:36.221 [http-nio-8080-exec-6] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=100, updateQuantityType=DEC]
15-02-2020 19:22:36.383 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.events.consumer.ProductUpdateEventConsumer.receivedMessage(30) - Found product:111211
15-02-2020 19:23:12.238 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 19:28:12.243 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 19:33:12.244 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 19:38:12.245 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 19:43:12.252 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 19:48:12.255 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 19:53:12.257 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 19:54:40.206 [http-nio-8080-exec-7] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getAllProductsBySearchText(52) - Requested search text:null
15-02-2020 19:54:40.207 [http-nio-8080-exec-7] INFO  Cheta314718101 - nes-product - com.nagarro.nes.services.impl.ProductServiceImpl.getAllProductsBySearchText(36) - No. of products availble in store:5
15-02-2020 19:55:10.203 [http-nio-8080-exec-8] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=2, updateQuantityType=DEC]
15-02-2020 19:58:12.260 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 20:03:12.263 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 20:08:12.272 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 20:08:48.037 [http-nio-8080-exec-10] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=2, updateQuantityType=DEC]
15-02-2020 20:13:12.274 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 20:18:12.277 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 20:23:12.278 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 20:28:12.280 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 20:33:12.282 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 20:38:12.284 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 20:43:12.286 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 20:48:12.288 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 20:53:12.290 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 20:55:21.035 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=2, updateQuantityType=DEC]
15-02-2020 20:58:12.291 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 21:00:12.163 [http-nio-8080-exec-4] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=2, updateQuantityType=DEC]
15-02-2020 21:03:12.292 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 21:03:34.789 [http-nio-8080-exec-5] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=2, updateQuantityType=DEC]
15-02-2020 21:08:12.294 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 21:09:06.647 [http-nio-8080-exec-6] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=2, updateQuantityType=DEC]
15-02-2020 21:13:12.295 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 21:18:12.295 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 21:20:39.934 [pool-1-thread-6] WARN  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.BlockingQueueConsumer.handleCancel(861) - Cancel received for amq.ctag-_g4ijLLmybmymAvpXkHzWw (product_update_queue); Consumer@1682e6a: tags=[[amq.ctag-_g4ijLLmybmymAvpXkHzWw]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@127.0.0.1:8087/,1), conn: Proxy@5458c71e Shared Rabbit Connection: SimpleConnection@2de3b052 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 63359], acknowledgeMode=AUTO local queue size=0
15-02-2020 21:20:40.030 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] WARN  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.logConsumerException(1440) - Consumer raised exception, processing can restart if the connection factory supports it. Exception summary: org.springframework.amqp.rabbit.support.ConsumerCancelledException
15-02-2020 21:20:40.035 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart(1419) - Restarting Consumer@1682e6a: tags=[[]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@127.0.0.1:8087/,1), conn: Proxy@5458c71e Shared Rabbit Connection: SimpleConnection@2de3b052 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 63359], acknowledgeMode=AUTO local queue size=0
15-02-2020 21:20:51.194 [pool-1-thread-10] WARN  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.BlockingQueueConsumer.handleCancel(861) - Cancel received for amq.ctag-JPgKTDKyYyEtC0tASqo4eQ (product_update_queue); Consumer@5616848a: tags=[[amq.ctag-JPgKTDKyYyEtC0tASqo4eQ]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@127.0.0.1:8087/,1), conn: Proxy@5458c71e Shared Rabbit Connection: SimpleConnection@2de3b052 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 63359], acknowledgeMode=AUTO local queue size=0
15-02-2020 21:20:52.107 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] WARN  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.logConsumerException(1440) - Consumer raised exception, processing can restart if the connection factory supports it. Exception summary: org.springframework.amqp.rabbit.support.ConsumerCancelledException
15-02-2020 21:20:52.107 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart(1419) - Restarting Consumer@5616848a: tags=[[]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@127.0.0.1:8087/,1), conn: Proxy@5458c71e Shared Rabbit Connection: SimpleConnection@2de3b052 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 63359], acknowledgeMode=AUTO local queue size=0
15-02-2020 21:21:08.542 [pool-1-thread-6] WARN  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.BlockingQueueConsumer.handleCancel(861) - Cancel received for amq.ctag-Ke6B5KanKH8bdULX82PVrw (product_update_queue); Consumer@21721f85: tags=[[amq.ctag-Ke6B5KanKH8bdULX82PVrw]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@127.0.0.1:8087/,1), conn: Proxy@5458c71e Shared Rabbit Connection: SimpleConnection@2de3b052 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 63359], acknowledgeMode=AUTO local queue size=0
15-02-2020 21:21:09.194 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] WARN  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.logConsumerException(1440) - Consumer raised exception, processing can restart if the connection factory supports it. Exception summary: org.springframework.amqp.rabbit.support.ConsumerCancelledException
15-02-2020 21:21:09.194 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart(1419) - Restarting Consumer@21721f85: tags=[[]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@127.0.0.1:8087/,1), conn: Proxy@5458c71e Shared Rabbit Connection: SimpleConnection@2de3b052 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 63359], acknowledgeMode=AUTO local queue size=0
15-02-2020 21:21:23.888 [pool-1-thread-10] WARN  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.BlockingQueueConsumer.handleCancel(861) - Cancel received for amq.ctag-Iy5UDBzy18xqHgXuCdyUnw (product_update_queue); Consumer@2fff44d2: tags=[[amq.ctag-Iy5UDBzy18xqHgXuCdyUnw]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@127.0.0.1:8087/,1), conn: Proxy@5458c71e Shared Rabbit Connection: SimpleConnection@2de3b052 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 63359], acknowledgeMode=AUTO local queue size=0
15-02-2020 21:21:24.306 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] WARN  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.logConsumerException(1440) - Consumer raised exception, processing can restart if the connection factory supports it. Exception summary: org.springframework.amqp.rabbit.support.ConsumerCancelledException
15-02-2020 21:21:24.306 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart(1419) - Restarting Consumer@2fff44d2: tags=[[]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@127.0.0.1:8087/,1), conn: Proxy@5458c71e Shared Rabbit Connection: SimpleConnection@2de3b052 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 63359], acknowledgeMode=AUTO local queue size=0
15-02-2020 21:22:00.247 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(159) - Application shutdown requested.
15-02-2020 21:22:00.250 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(65) - Unregistering application NES-PRODUCT with eureka with status DOWN
15-02-2020 21:22:00.251 [RMI TCP Connection(154)-127.0.0.1] WARN  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1321) - Saw local status change event StatusChangeEvent [timestamp=1581781920251, current=DOWN, previous=UP]
15-02-2020 21:22:00.251 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 21:22:00.256 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 21:22:00.262 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(640) - Waiting for workers to finish.
15-02-2020 21:22:00.371 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown(643) - Successfully waited for workers to finish.
15-02-2020 21:22:00.379 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown(1231) - Shutdown ignored - container is not active already
15-02-2020 21:22:00.380 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown(208) - Shutting down ExecutorService 'applicationTaskExecutor'
15-02-2020 21:22:00.395 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(906) - Shutting down DiscoveryClient ...
15-02-2020 21:22:03.398 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(940) - Unregistering ...
15-02-2020 21:22:03.403 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.unregister(942) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - deregister  status: 200
15-02-2020 21:22:03.411 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.shutdown(929) - Completed shut down of DiscoveryClient
15-02-2020 21:22:03.414 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Pausing ProtocolHandler ["http-nio-8080"]
15-02-2020 21:22:03.844 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Stopping service [Tomcat]
15-02-2020 21:22:03.846 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Destroying Spring FrameworkServlet 'dispatcherServlet'
15-02-2020 21:22:03.859 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Stopping ProtocolHandler ["http-nio-8080"]
15-02-2020 21:22:03.863 [RMI TCP Connection(154)-127.0.0.1] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Destroying ProtocolHandler ["http-nio-8080"]
15-02-2020 21:26:34.679 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStartupProfileInfo(655) - The following profiles are active: dev
15-02-2020 21:26:35.727 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.context.scope.GenericScope.setSerializationId(295) - BeanFactory id=ac2ea768-3ce1-3475-8223-a7500aec4593
15-02-2020 21:26:35.829 [main] INFO  Cheta314718101 - nes-product - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-02-2020 21:26:36.010 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(92) - Tomcat initialized with port(s): 8080 (http)
15-02-2020 21:26:36.017 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Initializing ProtocolHandler ["http-nio-8080"]
15-02-2020 21:26:36.018 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardService.log(173) - Starting service [Tomcat]
15-02-2020 21:26:36.020 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.StandardEngine.log(173) - Starting Servlet engine: [Apache Tomcat/9.0.30]
15-02-2020 21:26:36.151 [main] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring embedded WebApplicationContext
15-02-2020 21:26:36.152 [main] INFO  Cheta314718101 - nes-product - org.springframework.web.context.ContextLoader.prepareWebApplicationContext(284) - Root WebApplicationContext: initialization completed in 1459 ms
15-02-2020 21:26:36.246 [main] DEBUG Cheta314718101 - nes-product - com.nagarro.nes.store.ProductStore.init(29) - Storing some products before initialisation
15-02-2020 21:26:36.807 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(69) - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15-02-2020 21:26:36.835 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 21:26:36.836 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 21:26:36.840 [main] WARN  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(121) - No URLs will be polled as dynamic configuration sources.
15-02-2020 21:26:36.840 [main] INFO  Cheta314718101 - nes-product - com.netflix.config.sources.URLConfigurationSource.<init>(122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15-02-2020 21:26:36.956 [main] INFO  Cheta314718101 - nes-product - org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(171) - Initializing ExecutorService 'applicationTaskExecutor'
15-02-2020 21:26:39.615 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning(106) - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
15-02-2020 21:26:39.669 [main] WARN  Cheta314718101 - nes-product - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(81) - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
15-02-2020 21:26:39.719 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(72) - Setting initial instance status as: STARTING
15-02-2020 21:26:39.751 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(365) - Initializing Eureka in region us-east-1
15-02-2020 21:26:39.880 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(70) - Using JSON encoding codec LegacyJacksonJson
15-02-2020 21:26:39.881 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(71) - Using JSON decoding codec LegacyJacksonJson
15-02-2020 21:26:39.990 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(80) - Using XML encoding codec XStreamXml
15-02-2020 21:26:39.990 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(81) - Using XML decoding codec XStreamXml
15-02-2020 21:26:40.146 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 21:26:40.646 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(976) - Disable delta property : false
15-02-2020 21:26:40.647 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(977) - Single vip registry refresh property : null
15-02-2020 21:26:40.647 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(978) - Force full registry fetch : false
15-02-2020 21:26:40.647 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(979) - Application is null : false
15-02-2020 21:26:40.647 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(980) - Registered Applications size is zero : true
15-02-2020 21:26:40.648 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.fetchRegistry(982) - Application version is -1: true
15-02-2020 21:26:40.648 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1065) - Getting all instance registry info from the eureka server
15-02-2020 21:26:40.797 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(1074) - The response status is 200
15-02-2020 21:26:40.800 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.initScheduledTasks(1288) - Starting heartbeat executor: renew interval is: 30
15-02-2020 21:26:40.801 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.InstanceInfoReplicator.<init>(60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
15-02-2020 21:26:40.804 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.<init>(465) - Discovery Client initialized at timestamp 1581782200804 with initial instances count: 1
15-02-2020 21:26:40.806 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(41) - Registering application NES-PRODUCT with eureka with status UP
15-02-2020 21:26:40.806 [main] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.notify(1323) - Saw local status change event StatusChangeEvent [timestamp=1581782200806, current=UP, previous=STARTING]
15-02-2020 21:26:40.808 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(844) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product: registering service...
15-02-2020 21:26:40.808 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(147) - Context refreshed
15-02-2020 21:26:40.824 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(150) - Found 1 custom documentation plugin(s)
15-02-2020 21:26:40.857 [DiscoveryClient-InstanceInfoReplicator-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.DiscoveryClient.register(853) - DiscoveryClient_NES-PRODUCT/Cheta314718101.Nagarro.local:nes-product - registration status: 204
15-02-2020 21:26:40.886 [main] INFO  Cheta314718101 - nes-product - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(41) - Scanning for api listing references
15-02-2020 21:26:41.010 [main] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect(524) - Attempting to connect to: [localhost:8087]
15-02-2020 21:26:41.045 [main] INFO  Cheta314718101 - nes-product - org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection(497) - Created new connection: rabbitConnectionFactory#49c17ba4:0/SimpleConnection@56da96b3 [delegate=amqp://guest@127.0.0.1:8087/, localPort= 52877]
15-02-2020 21:26:41.094 [main] INFO  Cheta314718101 - nes-product - org.apache.coyote.http11.Http11NioProtocol.log(173) - Starting ProtocolHandler ["http-nio-8080"]
15-02-2020 21:26:41.115 [main] INFO  Cheta314718101 - nes-product - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(204) - Tomcat started on port(s): 8080 (http) with context path ''
15-02-2020 21:26:41.116 [main] INFO  Cheta314718101 - nes-product - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(145) - Updating port to 8080
15-02-2020 21:26:41.809 [main] INFO  Cheta314718101 - nes-product - com.nagarro.nes.NESProductApplication.logStarted(61) - Started NESProductApplication in 10.192 seconds (JVM running for 11.769)
15-02-2020 21:27:34.965 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-02-2020 21:27:34.965 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(525) - Initializing Servlet 'dispatcherServlet'
15-02-2020 21:27:34.974 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - org.springframework.web.servlet.DispatcherServlet.initServletBean(547) - Completed initialization in 9 ms
15-02-2020 21:27:35.095 [http-nio-8080-exec-1] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.updateQuantity(80) - Request for updating quantity received:UpdateProductQuantityRequest [quantity=2, updateQuantityType=DEC]
15-02-2020 21:31:40.658 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 21:36:40.661 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 21:41:40.664 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 21:46:40.665 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 21:51:40.666 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 22:03:08.031 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 22:47:22.056 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 22:52:22.058 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 22:57:22.059 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 23:02:22.061 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 23:07:22.128 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 23:12:22.131 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 23:17:22.134 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 23:20:39.894 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.api.ProductController.getAllProductsBySearchText(52) - Requested search text:null
15-02-2020 23:20:39.897 [http-nio-8080-exec-2] INFO  Cheta314718101 - nes-product - com.nagarro.nes.services.impl.ProductServiceImpl.getAllProductsBySearchText(36) - No. of products availble in store:5
15-02-2020 23:22:22.137 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 23:27:22.143 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
15-02-2020 23:59:23.072 [AsyncResolver-bootstrap-executor-0] INFO  Cheta314718101 - nes-product - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(43) - Resolving eureka endpoints via configuration
